[{"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\index.js":"1","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\App.js":"2","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\reportWebVitals.js":"3","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Main.js":"4","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Register.js":"5","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\assets\\content\\FooterContent.js":"6","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\assets\\content\\SliderContent.js":"7","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\DynamicModal.js":"8","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Login.js":"9","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\MyContext.js":"10","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\ForgetPassword.js":"11","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HeadersAndFooters\\NavbarHeader.js":"12","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HeadersAndFooters\\NavbarFooter.js":"13","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HeadersAndFooters\\FooterTile.js":"14","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HeadersAndFooters\\DashboardHeader.js":"15","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Dashboard.js":"16","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\UserManagement.js":"17","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\Home.js":"18","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\AboutUs.js":"19","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\Services.js":"20","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\ContactUs.js":"21","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\ImageDemoTile.js":"22","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\VideoDemoTile.js":"23","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\AddUser.js":"24","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Events.js":"25","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\CreateEvent.js":"26","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\MainLobby.js":"27","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\CatWalk.js":"28","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Exhibitors.js":"29","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\AddStall.js":"30","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\ExhibitorStall.js":"31","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Webinar.js":"32","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HelpDesk.js":"33","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Setting.js":"34","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\API\\auth.js":"35","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\API\\Auth.js":"36","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\API\\Config.js":"37","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\DashboardUser.js":"38","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\OrganizingEvent.js":"39","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\API\\userAPIs.js":"40","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Invoice.js":"41","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\EventDetails.js":"42","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\reducers\\userReducer.js":"43","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\FloatActionButton.js":"44","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\addVideos.js":"45","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\AddVideos.js":"46","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\AddVideoForm.js":"47","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\Terms.js":"48"},{"size":496,"mtime":1611340445448,"results":"49","hashOfConfig":"50"},{"size":681,"mtime":1616017186048,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"50"},{"size":4228,"mtime":1617022705622,"results":"53","hashOfConfig":"50"},{"size":14821,"mtime":1617319985526,"results":"54","hashOfConfig":"50"},{"size":821,"mtime":1612972761693,"results":"55","hashOfConfig":"50"},{"size":1730,"mtime":1612974030212,"results":"56","hashOfConfig":"50"},{"size":1153,"mtime":1613574881983,"results":"57","hashOfConfig":"50"},{"size":4292,"mtime":1616019030874,"results":"58","hashOfConfig":"50"},{"size":2371,"mtime":1616610855805,"results":"59","hashOfConfig":"50"},{"size":640,"mtime":1613379502917,"results":"60","hashOfConfig":"50"},{"size":2322,"mtime":1617125425131,"results":"61","hashOfConfig":"50"},{"size":783,"mtime":1617122221013,"results":"62","hashOfConfig":"50"},{"size":891,"mtime":1613379772422,"results":"63","hashOfConfig":"50"},{"size":2694,"mtime":1616240226153,"results":"64","hashOfConfig":"50"},{"size":4596,"mtime":1614070621804,"results":"65","hashOfConfig":"50"},{"size":4958,"mtime":1615576744391,"results":"66","hashOfConfig":"50"},{"size":3409,"mtime":1616076580915,"results":"67","hashOfConfig":"50"},{"size":362,"mtime":1613660481990,"results":"68","hashOfConfig":"50"},{"size":1233,"mtime":1613553824030,"results":"69","hashOfConfig":"50"},{"size":369,"mtime":1613553830016,"results":"70","hashOfConfig":"50"},{"size":837,"mtime":1613553845451,"results":"71","hashOfConfig":"50"},{"size":984,"mtime":1613553837547,"results":"72","hashOfConfig":"50"},{"size":5018,"mtime":1613654552620,"results":"73","hashOfConfig":"50"},{"size":9189,"mtime":1616136816684,"results":"74","hashOfConfig":"50"},{"size":4271,"mtime":1615894736251,"results":"75","hashOfConfig":"50"},{"size":8323,"mtime":1616682458350,"results":"76","hashOfConfig":"50"},{"size":10524,"mtime":1616682222621,"results":"77","hashOfConfig":"50"},{"size":6713,"mtime":1616749276582,"results":"78","hashOfConfig":"50"},{"size":2868,"mtime":1613814988135,"results":"79","hashOfConfig":"50"},{"size":4641,"mtime":1616163719949,"results":"80","hashOfConfig":"50"},{"size":679,"mtime":1616223748349,"results":"81","hashOfConfig":"50"},{"size":1601,"mtime":1616223560456,"results":"82","hashOfConfig":"50"},{"size":4038,"mtime":1613891018972,"results":"83","hashOfConfig":"50"},{"size":377,"mtime":1615567961867,"results":"84","hashOfConfig":"50"},{"size":1215,"mtime":1617319926134,"results":"85","hashOfConfig":"50"},{"size":1102,"mtime":1616698087395,"results":"86","hashOfConfig":"50"},{"size":12017,"mtime":1616652159540,"results":"87","hashOfConfig":"50"},{"size":7195,"mtime":1616163540700,"results":"88","hashOfConfig":"50"},{"size":2935,"mtime":1616241611880,"results":"89","hashOfConfig":"50"},{"size":4255,"mtime":1616134708321,"results":"90","hashOfConfig":"50"},{"size":9413,"mtime":1616134516109,"results":"91","hashOfConfig":"50"},{"size":180,"mtime":1616604870859,"results":"92","hashOfConfig":"50"},{"size":1435,"mtime":1616659928194,"results":"93","hashOfConfig":"50"},{"size":4598,"mtime":1616664009941,"results":"94","hashOfConfig":"50"},{"size":4841,"mtime":1616665056515,"results":"95","hashOfConfig":"50"},{"size":1764,"mtime":1616664852898,"results":"96","hashOfConfig":"50"},{"size":1236,"mtime":1617123290233,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"r9iir",{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"100"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"100"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"100"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"100"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"100"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"100"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"100"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"100"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"100"},{"filePath":"213","messages":"214","errorCount":3,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"100"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"100"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\index.js",[],["223","224"],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\App.js",["225","226"],"import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport NavbarHeader from './components/HeadersAndFooters/NavbarHeader';\nimport DashboardHeader from './components/HeadersAndFooters/DashboardHeader';\nimport Main from './components/Main';\nimport NavbarFooter from './components/HeadersAndFooters/NavbarFooter';\n\nimport { MyProvider } from './components/MyContext';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <MyProvider>\n          <Main/>\n          <NavbarFooter/>\n        </MyProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\reportWebVitals.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Main.js",["227","228","229","230"],"import React, { useEffect }  from 'react';\r\nimport {Switch, Route, Redirect, useHistory} from 'react-router-dom';\r\nimport Home from './BasicStructure/Home';\r\nimport Services from './BasicStructure/Services';\r\nimport AboutUs from './BasicStructure/AboutUs';\r\nimport ContactUs from './BasicStructure/ContactUs';\r\nimport Register from './Register';\r\nimport ForgetPassword from './ForgetPassword';\r\nimport Dashboard from './Dashboard';\r\nimport DashboardUser from './DashboardUser';\r\nimport UserManagement from './UserManagement';\r\nimport Events from './Events';\r\nimport MainLobby from './MainLobby';\r\nimport Catwalk from './CatWalk';\r\nimport AddVideos from './AddVideos';\r\nimport Exhibitors from './Exhibitors';\r\nimport ExhibitorStall from './ExhibitorStall';\r\nimport Webinar from './Webinar';\r\nimport HelpDesk from './HelpDesk';\r\nimport Setting from './Setting';\r\nimport NavbarHeader from '../components/HeadersAndFooters/NavbarHeader';\r\nimport DashboardHeader from '../components/HeadersAndFooters/DashboardHeader';\r\n\r\nimport { useHeaderContext, useUserContext } from './MyContext';\r\nimport NavbarFooter from './HeadersAndFooters/NavbarFooter';\r\n\r\nimport AddUser from './AddUser';\r\nimport OrganizeEvents from './OrganizingEvent';\r\n\r\n// import { RefreshToken } from './components/API/Auth';\r\n\r\nfunction Main(){\r\n\r\n    const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n    // const isBaseHeader = localStorage.getItem(\"isBaseHeader\");\r\n    \r\n    const history = useHistory();\r\n    const [user, setUser] = useUserContext();\r\n\r\n    // useEffect(() => {\r\n  \r\n    //   if(user){\r\n    //     setInterval(  \r\n    //       () => {\r\n    //           console.log(user.tokenExpiry)\r\n    //         let expiry = new Date(user.tokenExpiry);\r\n    //         let current = new Date();\r\n    //         current.setSeconds(current.getSeconds())\r\n    //         console.log(expiry , \" : \" , current);  \r\n    //         if(current > expiry){\r\n    //             console.log(\"Refresh Token\");\r\n    //         }\r\n    //         else{\r\n    //             console.log(\"Same\")\r\n    //         }\r\n    //       },  \r\n    //       1000  \r\n    //     );  \r\n    //   }\r\n    // }, []) \r\n\r\n    useEffect(()=>{\r\n        const paths = [\"/home\", \"/services\", \"/aboutUs\", \"/contactUs\", \"/register\"]\r\n        if(!user &&  !paths.includes(window.location.pathname)){\r\n            toggleHeader(true);\r\n            history.push('/');\r\n        }\r\n    },[]);\r\n\r\n    return <> \r\n            {isBaseHeader ? <NavbarHeader/> : <DashboardHeader/> }\r\n\r\n                <Switch>\r\n                    <Route path='/home'><Home /></Route>\r\n                    <Route path='/aboutUs'><AboutUs /></Route>\r\n                    <Route path='/services'> <Services /> </Route>\r\n                    <Route path='/contactUs'> <ContactUs /> </Route>\r\n                    <Route path='/register'> <Register /> </Route>\r\n                    <Route path='/forget-password'> <ForgetPassword /> </Route>\r\n                    <Route path='/dashboard'> <Dashboard /> </Route>\r\n                    <Route path='/main-lobby/:ID/user-management'> <UserManagement /> </Route>\r\n                    <Route path='/events'> <Events /> </Route>\r\n                    <Route exact path='/main-lobby/:ID'> \r\n                        <MainLobby /> \r\n                    </Route>\r\n                    <Route exact path='/main-lobby/:ID/catwalk'> <Catwalk /> </Route>\r\n                    <Route path='/main-lobby/:ID/catwalk/add-videos'> <AddVideos /> </Route>\r\n\r\n                    <Route exact path='/main-lobby/:ID/exhibitors'> <Exhibitors /> </Route>\r\n                    <Route exact path='/main-lobby/:ID/webinar'> <Webinar /> </Route>\r\n                    <Route exact path='/main-lobby/:ID/help-desk'> <HelpDesk /> </Route>\r\n                    <Route exact path='/main-lobby/:ID/exhibitors/exhibitor-stall'> <ExhibitorStall /> </Route>\r\n                    <Route path='/settings'> <Setting /> </Route>\r\n                    <Route path='/user-dashboard'><DashboardUser /></Route>\r\n                    <Route path='/organize-events'><OrganizeEvents /></Route>\r\n                    \r\n                    <Redirect to=\"/home\" />\r\n                </Switch>\r\n            </>\r\n}\r\nexport default Main;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Register.js",["231","232","233","234"],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\assets\\content\\FooterContent.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\assets\\content\\SliderContent.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\DynamicModal.js",["235"],"import React, {useState} from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nimport { useModalContext } from './MyContext';\r\n\r\nfunction DynamicModal(props){ \r\n\r\nconst header = props.content.header;\r\nconst component = props.content.component;\r\nconst footer = props.content.footer;\r\n\r\nconst [modalOpen, toggleModelOpen] = useModalContext()\r\n\r\nconst styles = [\r\n    {\r\n        color:\"#343a40\",\r\n        width:\"100%\"\r\n    }\r\n]\r\n\r\nreturn  <>\r\n            <Modal show={modalOpen}\r\n                onHide = {()=> { toggleModelOpen(false)}}\r\n                size=\"md\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <h2 style={styles[0]}><center>{header}</center></h2>                                              \r\n                </Modal.Header>\r\n\r\n                <Modal.Body >\r\n                    {component}\r\n                </Modal.Body>\r\n                \r\n                <Modal.Footer>\r\n                    {footer}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n}\r\nexport default DynamicModal;\r\n","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Login.js",["236","237","238","239","240"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Form, Container, Row, Button, Col} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { Authenticate } from './API/Auth';\r\n \r\n// CSS import goes here\r\nimport './../assets/css/BaseComponents.css';\r\n\r\n//custome Hooks\r\nimport { useUserContext, useModalContext, useHeaderContext } from './MyContext';\r\n\r\nfunction Login(){\r\n\r\n    const history = useHistory();\r\n    const [user, setUser] = useUserContext();\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n    const [error, setError] = useState({\r\n        display:\"none\",\r\n        msg:\"\"\r\n    })\r\n\r\n    const { register, errors, watch, handleSubmit } = useForm();\r\n    \r\n    const onSubmit = data => {\r\n        Authenticate(data)\r\n        .then((res) => {\r\n            if(res.data.success)\r\n            {\r\n            const usr = res.data.user;\r\n            var d = new Date();\r\n            d.setSeconds(d.getSeconds() + usr.tokenExpiry);\r\n            usr.tokenExpiry = d;\r\n            usr.isLogin = false;\r\n            setUser(usr);\r\n            toggleHeader(false);\r\n            toggleModelOpen(false);\r\n            if(usr.role === \"admin\")\r\n                history.push(\"/dashboard\");\r\n            else\r\n                history.push(\"/user-dashboard\");\r\n\r\n            }else{\r\n                setError({\r\n                    display:\"block\",\r\n                    msg:res.statusText\r\n                })\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            setError({\r\n                display:\"block\",\r\n                msg:err.message\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    const styles = {\r\n        errors: {\r\n            color:\"red\",\r\n            display: error.display\r\n        }\r\n    }\r\n\r\n\r\n    return  <div>\r\n                    <Container>\r\n                        <Form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Form.Group as={Row} controlId=\"formBasicUsername\">\r\n                                {/* <Form.Label>Password</Form.Label> */}\r\n                                <Col sm={{span:8, offset:2}}>\r\n                                    <Form.Control onFocus={()=> setError({display:\"none\",msg:null})} name=\"username\" type=\"text\" placeholder=\"Username or Email\" ref={register} required/>\r\n                                </Col>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formBasicPassword\">\r\n                                {/* <Form.Label>Address</Form.Label> */}\r\n                                <Col sm={{span:8, offset:2}}>\r\n                                    <Form.Control onFocus={()=> setError({display:\"none\",msg:null})} name=\"password\" type=\"password\" placeholder=\"Password\" ref={register} required/>\r\n                                    <i className=\"ion-eye-outline\" id=\"togglePassword\"></i>\r\n                                    <Form.Label><a href=\"/forget-password\">Forget Password?</a></Form.Label>\r\n                                </Col>\r\n       \r\n                                <Col style={styles.errors} sm={{span:8, offset:2}}>\r\n                                        {error.msg /* Invalid username or password! */}\r\n                                </Col>\r\n        \r\n                            </Form.Group>\r\n                            \r\n                                <Row>\r\n                                    <Col sm={{span:8, offset:2}}>\r\n                                        <Button size=\"lg\" variant=\"dark\" type=\"submit\" block>\r\n                                            Login\r\n                                        </Button>\r\n                                        <Form.Label style={styles[0]}>\r\n                                            <center>\r\n                                                Don't have account? <a href=\"/register\">Register Now</a>\r\n                                            </center>        \r\n                                        </Form.Label>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                    </Container>\r\n            </div>\r\n}\r\nexport default Login;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\MyContext.js",["241","242","243","244","245"],"import React, { useState, useContext, useReducer } from 'react';\r\nimport { initialState, reducer } from './reducers/userReducer';\r\n\r\n\r\nlocalStorage.setItem(\"modalOpen\", null);\r\n\r\nconst MyContext = React.createContext();\r\nconst ModalContext = React.createContext();\r\nconst HeaderContext = React.createContext();\r\nconst UserContext = React.createContext({\r\n    user:{},\r\n    setUser: () => {}\r\n});\r\n\r\nexport function useUserContext(){\r\n    return useContext(UserContext);\r\n}\r\n\r\n//creating custome HOOK\r\nexport function useModalContext(){\r\n    return useContext(ModalContext);\r\n}\r\n\r\nexport function useHeaderContext(){\r\n    return useContext(HeaderContext);\r\n}\r\n// export function useMyContextUpdate(){\r\n//     return useContext(MyContextUpdate);\r\n// }\r\n\r\nexport function MyProvider({ children }){\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n\r\n    const [modalOpen, toggleModelOpenHandler] = useState(false);\r\n    const [user, setUserHandler] = useState({});\r\n    const [isBaseHeader, toggleHeaderHandler] = useState(true);\r\n\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem(\"isBaseHeader\", isBaseHeader);\r\n    //     console.log(\"Updated\")\r\n    //     console.log(isBaseHeader)\r\n    //   }, [toggleHeader]);\r\n    \r\n\r\n    function setUser(user) {\r\n        localStorage.setItem(\"user\", JSON.stringify(user) );\r\n        setUserHandler(user);\r\n    }\r\n\r\n    function toggleModelOpen(value){\r\n        toggleModelOpenHandler(value);\r\n        localStorage.setItem(\"modalOpen\", value);\r\n    }\r\n\r\n    function toggleHeader(value){\r\n\r\n        toggleHeaderHandler(value);\r\n        localStorage.setItem(\"isBaseHeader\", value);\r\n        // toggleHeaderHandler(prevIsBaseHeader => !prevIsBaseHeader);\r\n    }\r\n\r\n    return(\r\n        <UserContext.Provider value={[JSON.parse(localStorage.getItem(\"user\")), setUser]}>\r\n            <ModalContext.Provider value={[localStorage.getItem(\"modalOpen\") == String(true), toggleModelOpen]}>\r\n                 <HeaderContext.Provider value={[localStorage.getItem(\"isBaseHeader\") == String(true), toggleHeader]}>\r\n                    <MyContext.Provider value={{state, dispatch}}>\r\n                    { children }\r\n                    </MyContext.Provider>\r\n                </HeaderContext.Provider>\r\n            </ModalContext.Provider>\r\n        </UserContext.Provider>\r\n    );\r\n}\r\n\r\n\r\nexport default MyContext;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\ForgetPassword.js",["246"],"import React from 'react';\r\nimport {Container, Row, Button, Col} from 'react-bootstrap';\r\n\r\n// CSS import goes here\r\nimport './../assets/css/BaseComponents.css';\r\n\r\nfunction ForgetPassword(){\r\n    return  <>\r\n                <div className=\"services\">\r\n                    <Container>                        \r\n                        <Row>\r\n                            <Col sm={{span:6, offset:3}}>\r\n                                <h1>Forget Password</h1>\r\n                            </Col>\r\n                        </Row>      \r\n                    </Container>\r\n                </div>\r\n            </>\r\n}\r\nexport default ForgetPassword;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HeadersAndFooters\\NavbarHeader.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HeadersAndFooters\\NavbarFooter.js",["247","248","249"],"import React from 'react';\r\nimport {CardGroup, Row} from 'react-bootstrap';\r\n\r\n// CSS imports\r\n\r\n//User Defined Components imports\r\nimport FooterTile from './FooterTile';\r\nimport footerContent from '../../assets/content/FooterContent';\r\n//Styles\r\n\r\n//constants goes here\r\nimport { useUserContext } from '../MyContext';\r\n\r\n\r\nfunction NavbarFooter(){\r\n\r\n    const [user, setUser] = useUserContext();\r\n\r\n    return  <>\r\n    {/* <Row style={{minHeight:\"10vh\"}}></Row> */}\r\n    <div className=\"App-footer\">\r\n                <CardGroup >\r\n                {footerContent.map((content,index) => {\r\n                    return <FooterTile key={index} content={content} />\r\n                })} \r\n                </CardGroup>\r\n            </div>\r\n            </>\r\n}\r\nexport default NavbarFooter;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HeadersAndFooters\\FooterTile.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HeadersAndFooters\\DashboardHeader.js",["250","251","252","253","254","255","256","257"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport logo from './../../assets/images/logo.png';\r\nimport {Nav, Navbar, NavDropdown} from 'react-bootstrap';\r\n\r\n// CSS imports\r\n\r\n//User Defined Components imports\r\nimport DynamicModal from '../DynamicModal';\r\n//Styles\r\nimport { useHeaderContext, useUserContext } from '../MyContext';\r\nimport { Logout } from '../API/Auth';\r\n\r\nconst styles = {\r\n  align:{\r\n    textAlign:\"left\"\r\n  }\r\n}\r\n\r\nfunction DashboardHeader(){\r\n\r\n  const history = useHistory();\r\n  const [content, setContent] = useState();\r\n  const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n  const [user, setUser] = useUserContext();\r\n\r\n  const logoutHandler = () => {\r\n      console.log(\"Logout\")\r\n      localStorage.clear();\r\n      toggleHeader(true);\r\n      window.location.reload();\r\n      history.push(\"/\");\r\n      // Logout()\r\n    // .then(res => {\r\n    //   localStorage.clear();\r\n    //   toggleHeader(true);\r\n    //   history.push(\"/\");\r\n    // })\r\n    // .catch(err => {\r\n    //   localStorage.clear();\r\n    //   console.log(err);\r\n    //   toggleHeader(true);s\r\n    //   history.push(\"/\");\r\n    // })\r\n   \r\n  }\r\n\r\n\r\n  const renderHeaderOptions = () => {\r\n    if(user && user.role == \"admin\"){\r\n      return [\r\n        <Nav.Link className=\"ml-4\" key=\"nav-link-1\" href=\"/main-lobby\">Main Lobby</Nav.Link>,\r\n        <Nav.Link className=\"ml-4\" key=\"nav-link-2\" href=\"/user-management\">Users</Nav.Link>,\r\n        <Nav.Link className=\"ml-4\" key=\"nav-link-3\" href=\"/events\">Events</Nav.Link>,\r\n        <Nav.Link className=\"ml-4\" key=\"nav-link-4\" href=\"/settings\">Settings</Nav.Link>\r\n      ]\r\n    }else{\r\n      return[\r\n        <Nav.Link className=\"ml-4\" key=\"nav-link-1\" href=\"/user-dashboard\">Dashboard</Nav.Link>,\r\n        <Nav.Link className=\"ml-4\" key=\"nav-link-2\" href=\"/settings\">Profile</Nav.Link>,\r\n        <Nav.Link className=\"ml-4\" key=\"nav-link-3\" href=\"/events\">Events</Nav.Link>,\r\n        <Nav.Link className=\"ml-4\" key=\"nav-link-4\" href=\"/organize-events\">Organize Events</Nav.Link>\r\n      ]\r\n    }\r\n  }\r\n\r\nreturn  <Navbar collapseOnSelect expand=\"md\" bg=\"transparent\" variant=\"dark\" sticky='top' className=\"App-header\">\r\n          <Navbar.Brand ><img src={logo} alt=\"EMS\"/></Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"ml-auto\" style={styles.align}>\r\n              {renderHeaderOptions()}\r\n              <Nav.Link className=\"mx-4\" href=\"#logout\" onClick={logoutHandler}>Logout</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n}\r\n\r\nexport default DashboardHeader;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Dashboard.js",["258","259","260","261","262","263","264","265"],"import React, { useState } from 'react';\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport '../assets/css/Dashboard.css';\r\n\r\nimport { useUserContext } from './MyContext';\r\n\r\nconst tmp = [{\r\n    \"name\":\"Health Awareness\",\r\n    \"date\":\"10-1-2021\",\r\n    \"host\":\"Ali\",\r\n    \"details\":\"This time of events is 4pm\"\r\n},{\r\n    \"name\":\"Catwalk Show\",\r\n    \"date\":\"10-1-2021\",\r\n    \"host\":\"James\",\r\n    \"details\":\"This time of events is 4pm\"\r\n},{\r\n    \"name\":\"Games Theory\",\r\n    \"date\":\"10-1-2021\",\r\n    \"host\":\"Aqib\",\r\n    \"details\":\"This time of events is 4pm\"\r\n}]\r\n\r\n\r\nfunction Dashboard(){\r\n\r\n    const [user, setUser] = useUserContext();\r\n    const [events, setEvents] = useState(tmp);\r\n\r\n    const styles = {\r\n        container:{\r\n            marginTop:20,\r\n            outline:5,\r\n            border:5\r\n        },\r\n        title:{\r\n            fontSize:\"calc(5px + 3vmin)\",\r\n            textAlign: \"left\",\r\n            marginTop:20\r\n        },\r\n        heading:{\r\n            fontSize:\"calc(5px + 3vmin)\"\r\n        },\r\n        circles:{\r\n            marginBottom: 30\r\n        },\r\n        record:{\r\n            fontSize:\"calc(3px + 2vmin)\"\r\n        }\r\n    }\r\n\r\n    const [totalEvents, setTotalEvents] = useState(23);\r\n    const [todayEvents, setTodayEvents] = useState(3);\r\n    const [upcomingEvents, setUpcomingEvents] = useState(20);\r\n    const [totalUsers, setTotalUsers] = useState(105);\r\n    const [totalAdmins, setTotalAdmins] = useState(40);\r\n\r\n    return  <>\r\n            <div className=\"dashboard\">\r\n                <Container>\r\n                    <Row style={styles.circles} className=\"justify-content-center\">\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                                <h3> {totalEvents} </h3>\r\n                            </Button>\r\n                            <p>Total Events</p>\r\n                        </Col>\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                                <h3> {todayEvents} </h3>\r\n                            </Button>\r\n                            <p>Today's Events</p>\r\n                        </Col>\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                            <h3> {upcomingEvents} </h3>\r\n                            </Button>\r\n                            <p>Upcoming Events</p>                            \r\n                        </Col>\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                                <h3> {totalUsers} </h3>\r\n                            </Button>\r\n                            <p>Total Users</p>\r\n                        </Col>\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                            <h3> {totalAdmins} </h3>\r\n                            </Button>\r\n                            <p>Total Admins</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>Today's Events</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    <Row style={styles.container} className=\"justify-content-center\" >\r\n                        <Col style={styles.heading}>Event Name </Col>\r\n                        <Col style={styles.heading}>Date</Col>\r\n                        <Col style={styles.heading}>Host </Col>\r\n                        <Col style={styles.heading}>Details </Col>\r\n                    </Row>\r\n                    <hr className=\"divider\"/>   \r\n\r\n                    {/* Here wil go dynamic UI */}\r\n                    {events.map( ({name, date, host, details}, index) => {\r\n                        return <Row key={index} className=\"justify-content-center\" style={styles.container}>\r\n                            <Col style={styles.record}>{name} </Col>\r\n                            <Col style={styles.record}>{date}</Col>\r\n                            <Col style={styles.record}>{host} </Col>\r\n                            <Col style={styles.record}>{details} </Col>\r\n                            </Row>                                   \r\n                    })}\r\n                    <hr className=\"divider\"/>\r\n\r\n                </Container>\r\n\r\n            </div>\r\n            </>\r\n\r\n}\r\nexport default Dashboard;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\UserManagement.js",["266","267"],"import React, { useState } from 'react';\r\nimport { Button, Container, Row, Col, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport SearchField from \"react-search-field\";\r\n\r\nimport '../assets/css/Dashboard.css';\r\n\r\nimport { useModalContext } from './MyContext';\r\nimport AddUser from './AddUser';\r\nimport DynamicModal from './DynamicModal';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst tmp = [{\r\n    \"name\":\"Ali\",\r\n    \"role\":\"Admin\",\r\n    \"details\":\"This user has admin rights\"\r\n},{\r\n    \"name\":\"James\",\r\n    \"role\":\"Host\",\r\n    \"details\":\"This user has event host rights\"\r\n},{\r\n    \"name\":\"Aqib\",\r\n    \"role\":\"Visitor\",\r\n    \"details\":\"This user can only view content\"\r\n}]\r\n\r\nconst styles = {\r\n    container:{\r\n        marginTop:20,\r\n        outline:5,\r\n        border:5\r\n    },\r\n    title:{\r\n        fontSize:\"calc(5px + 3vmin)\",\r\n        textAlign: \"left\",\r\n        marginTop:20\r\n    },\r\n    heading:{\r\n        fontSize:\"calc(5px + 3vmin)\"\r\n    },\r\n    circles:{\r\n        marginBottom: 30\r\n    },\r\n    record:{\r\n        fontSize:\"calc(3px + 2vmin)\"\r\n    },\r\n    searchField:{\r\n        borderRadius: \"50%\"\r\n    }\r\n}\r\n\r\nfunction UserManagement(){\r\n\r\n    const history = useHistory();\r\n\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n\r\n    const [users, setUsers] = useState(tmp);\r\n    const [content, setContent] = useState();\r\n\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    const searchHandler = () => {\r\n        console.log(searchQuery);\r\n        toggleModelOpen(false);\r\n        console.log('Working')\r\n    }\r\n\r\n    const addUserHandler = () => {\r\n        let cont = {\r\n            header:\"ADD USER\",\r\n            component:<AddUser/>,\r\n            footer:\"\"\r\n          }\r\n        setContent(cont);\r\n        toggleModelOpen(true);\r\n    }\r\n\r\n    return  <>\r\n            {modalOpen?  <DynamicModal content={content} />: ''}\r\n\r\n            <div className=\"dashboard\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"3\">\r\n                            <DropdownButton className=\"float-right\" variant=\"secondary\" id=\"dropdown-basic-button\" title=\"User Types\">\r\n                                <Dropdown.Item href=\"#/action-1\">Admin</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#/action-3\">SubAdmin</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#/action-2\">Event Planner</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#/action-3\">Event Host</Dropdown.Item>\r\n                                <Dropdown.Item href=\"#/action-3\">Visitor</Dropdown.Item>\r\n                            </DropdownButton>\r\n                        </Col>\r\n                        <Col sm=\"4\">\r\n                            <SearchField\r\n                                placeholder=\"Search...\"\r\n                                onChange={value => { toggleModelOpen(false); setSearchQuery(value) }}\r\n                                searchText=\"\"\r\n                                classNames=\"float-left\"\r\n                                style={styles.searchField}\r\n                                onEnter={searchHandler}\r\n                                onSearchClick={searchHandler}\r\n                                />\r\n                        </Col>\r\n                        <Col sm=\"5\">\r\n                            <Button onClick={addUserHandler} className=\"float-right\" variant=\"secondary\">Add User</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>Users</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    <Row style={styles.container} className=\"justify-content-center\" >\r\n                        <Col style={styles.heading}>Event Name </Col>\r\n                        <Col style={styles.heading}>Role</Col>\r\n                        <Col style={styles.heading}>Details </Col>\r\n                        <Col style={styles.heading}> </Col>\r\n                    </Row>\r\n                    <hr className=\"divider\"/>   \r\n\r\n                    {/* Here wil go dynamic UI */}\r\n                    {users.map( ({name, role, details}, index) => {\r\n                        return <Row key={index} style={styles.container}>\r\n                                    <Col style={styles.record}>{name} </Col>\r\n                                    <Col style={styles.record}>{role}</Col>\r\n                                    <Col style={styles.record}>{details} </Col>\r\n                                    <Col><Button variant=\"link\">Edit</Button></Col>\r\n                                </Row>                                   \r\n                    })}\r\n                    <hr className=\"divider\"/>\r\n\r\n                </Container>\r\n            </div>\r\n            </>\r\n\r\n}\r\nexport default UserManagement;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\Home.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\AboutUs.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\Services.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\ContactUs.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\ImageDemoTile.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\VideoDemoTile.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\AddUser.js",["268","269","270","271","272","273","274","275","276"],"import React, {useState} from 'react';\r\nimport {Form, Container, Row, Button, Col, Dropdown, ButtonGroup, SplitButton } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// CSS import goes here\r\nimport './../assets/css/BaseComponents.css';\r\n\r\nimport { useModalContext } from './MyContext';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//custome Hooks\r\nfunction AddUser(){\r\n\r\n    const history = useHistory();\r\n\r\n    const { register, errors, watch, handleSubmit } = useForm();\r\n    \r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n\r\n    const onSubmit = data => {\r\n        console.log(data)\r\n        toggleModelOpen(false);\r\n        console.log(\"User Added\");\r\n    }\r\n\r\n    const styles = {\r\n        dropdown: {\r\n            width:\"100%\",\r\n        }\r\n    }\r\n\r\n\r\n    return  <>\r\n                <Container>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Group as={Row} controlId=\"formBasicName\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"name\" type=\"text\" placeholder=\"Name\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEmail\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"email\" type=\"text\" placeholder=\"Email\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicPhone\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"Phone\" type=\"text\" placeholder=\"Phone\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicUserRole\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control as=\"select\" custom>\r\n                                    <option>User type</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Form.Control>\r\n                                {/* <SplitButton \r\n                                    as={ButtonGroup} \r\n                                    style={styles.dropdown} \r\n                                    variant=\"secondary\" \r\n                                    id=\"dropdown-basic-button\" \r\n                                    title=\"User Types\"\r\n                                    menuAlign={{ lg: 'left' }}\r\n                                    drop=\"down\"\r\n                                    >\r\n                                    <Dropdown.Item href=\"#/action-1\">Admin</Dropdown.Item>\r\n                                    <Dropdown.Item href=\"#/action-3\">SubAdmin</Dropdown.Item>\r\n                                    <Dropdown.Item href=\"#/action-2\">Event Planner</Dropdown.Item>\r\n                                    <Dropdown.Item href=\"#/action-3\">Event Host</Dropdown.Item>\r\n                                    <Dropdown.Item href=\"#/action-3\">Visitor</Dropdown.Item>\r\n                                </SplitButton> */}\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicUsername\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"username\" type=\"text\" placeholder=\"Username\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicPassword\">\r\n                            {/* <Form.Label>Address</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"password\" type=\"password\" placeholder=\"Password\" ref={register}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicSubmitButton\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Button size=\"lg\" variant=\"dark\" type=\"submit\" block>\r\n                                    ADD\r\n                                </Button>\r\n                            </Col>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n}\r\nexport default AddUser;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Events.js",["277","278","279","280","281","282"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Button, Container, Row, Col, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport SearchField from \"react-search-field\";\r\nimport DynamicModal from './DynamicModal';\r\n\r\n// CSS\r\nimport '../assets/css/Dashboard.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { useModalContext,  useHeaderContext, useUserContext } from './MyContext';\r\nimport EventDetails from './EventDetails';\r\nimport Invoice from './Invoice';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// API Callings\r\nimport { UpcomingEventsData } from './API/userAPIs';\r\nimport { RefreshToken } from './API/Auth';\r\n\r\n\r\n\r\nconst styles = {\r\n    container:{\r\n        marginTop:20,\r\n        outline:5,\r\n        border:5\r\n    },\r\n    title:{\r\n        fontSize:\"calc(5px + 3vmin)\",\r\n        textAlign: \"left\",\r\n        marginTop:20\r\n    },\r\n    heading:{\r\n        fontSize:\"calc(5px + 3vmin)\",\r\n        textAlign:\"left\"\r\n    },\r\n    circles:{\r\n        marginBottom: 30\r\n    },\r\n    record:{\r\n        fontSize:\"calc(3px + 2vmin)\",\r\n        textAlign:\"left\"\r\n    },\r\n    searchField:{\r\n        borderRadius: \"50%\"\r\n    },\r\n    eventSelection:{\r\n        cursor:\"default\"\r\n    },\r\n    btn:{\r\n        width:\"100px\"\r\n    }\r\n}\r\n\r\nfunction Events(){\r\n\r\n    const history = useHistory();\r\n\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n    const [user, setUser] = useUserContext();\r\n\r\n    const [content, setContent] = useState();\r\n\r\n     var [events, setEvents] = useState([]);\r\n     const [allEvents, setAllEvents] = useState([]);\r\n\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    const searchHandler = () => {\r\n\r\n        if(searchQuery.trim() === \"\")\r\n            {\r\n                setEvents(allEvents);\r\n            }\r\n        let eventList = []\r\n        for(let tmp of allEvents)\r\n            if(tmp.name.toLowerCase().includes(searchQuery.toLowerCase()))\r\n                eventList.push(tmp)\r\n        setEvents(eventList)\r\n    }\r\n\r\n    const detailsHandler = (id) => {\r\n        if(!user){\r\n            toast(\"You must login first\", {\r\n                type:\"info\",\r\n                });\r\n        }else {\r\n            let cont = {\r\n                header:\"Event Details\",\r\n                component:<EventDetails id = {id} />,\r\n                footer:\"\"\r\n            }\r\n            setContent(cont);\r\n            toggleModelOpen(true);\r\n        }\r\n    }\r\n\r\n    const buyTicketHandler = () => {\r\n        if(!user){\r\n            toast(\"You must login first\", {\r\n\r\n                type:\"info\",\r\n                });\r\n        }else {\r\n            let cont = {\r\n                header:\"Buy Ticket\",\r\n                component:<Invoice/>,\r\n                footer:\"\"\r\n            }\r\n            setContent(cont);\r\n            toggleModelOpen(true);\r\n        }\r\n    }\r\n\r\n    const selectedEventHandler = (name) => {\r\n        console.log(name)\r\n    }\r\n  \r\n    useEffect(() => {\r\n        UpcomingEventsData()\r\n        .then(res => {\r\n            setAllEvents(res.data)\r\n            setEvents(res.data)\r\n        }).catch(err => {\r\n        //    Error\r\n        console.log(err)\r\n        if(err.message === \"INVALID\"){\r\n            toast(\"Please login to access events\", {\r\n                type:\"info\",\r\n                });\r\n        }else if(err.message === \"EXPIRED\"){\r\n            toast(\"You must login first\", {\r\n                type:\"info\",\r\n                });\r\n                localStorage.clear();\r\n                toggleHeader(true);\r\n                window.location.reload();\r\n                history.push(\"/\");\r\n        }else if(err.message === \"REFRESH\"){\r\n            RefreshToken()\r\n            .then(res => {\r\n                if(res.data.success){\r\n                    console.log(\"Token Refreshed\")\r\n                    var d = new Date();\r\n                    d.setSeconds(d.getSeconds() + res.data.user.tokenExpiry);\r\n                    res.data.user.tokenExpiry = d;\r\n                    setUser(res.data.user);\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n                localStorage.clear();\r\n                toggleHeader(true);\r\n                window.location.reload();\r\n                history.push(\"/\");\r\n            })\r\n\r\n        }});\r\n    },[])\r\n\r\n    const renderModalHandler = () => {\r\n        if(user && user.isLogin)\r\n            return modalOpen ? <DynamicModal content={content} /> : <></> ;\r\n        return;\r\n    }\r\n\r\n    return  <>\r\n            {renderModalHandler()}\r\n\r\n            <ToastContainer \r\n                position=\"top-center\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <div className=\"dashboard\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <SearchField\r\n                                placeholder=\"Search...\"\r\n                                onChange={value => setSearchQuery(value)}\r\n                                searchText=\"\"\r\n                                style={styles.searchField}\r\n                                onEnter={searchHandler}\r\n                                onSearchClick = {searchHandler}\r\n                                />\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>Upcoming Events</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    {/* Here wil go dynamic UI */}\r\n                    {events.map( ({id, name, date, host, details}, index) => {\r\n                        return <div key={\"events\"+index}>\r\n                                <Row key={\"events-container\"+index} className=\"event-items\"  style={styles.container}>\r\n                                    <Col sm={12} md={10} onClick={ () => selectedEventHandler(name)} style={styles.eventSelection}>\r\n                                        <Row>\r\n                                        <Col sm={4} style={styles.heading}>{name} </Col>\r\n                                        <Col sm={6} style={styles.record}>Date & Time: {date} 10 pm</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col sm={4} style={styles.record}>Organizier: {host} </Col>\r\n                                        <Col sm={6} style={styles.record}>Details: {details} </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col sm={12} md={2}>\r\n                                        <Row>\r\n                                            <Col sm={6} md={12} className=\"mb-1\" style={styles.record}><Button onClick={ () => detailsHandler(id)} style={styles.btn} variant=\"secondary\">Details</Button></Col>                                    \r\n                                            <Col sm={6} md={12} style={styles.record}><Button onClick={ () => buyTicketHandler(id) } style={styles.btn} variant=\"secondary\">Buy Ticket</Button></Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row> \r\n                                <hr className=\"divider\"/>\r\n                                </div>\r\n                    })}\r\n                </Container>\r\n            </div>\r\n            </>\r\n\r\n}\r\nexport default Events;\r\n\r\n{/*\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>Upcoming Events</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    <Row style={styles.container} className=\"justify-content-center\" >\r\n                        <Col style={styles.heading}>Name </Col>\r\n                        <Col style={styles.heading}>Date</Col>\r\n                        <Col style={styles.heading}>Host Name </Col>\r\n                        <Col style={styles.heading}>Details</Col>\r\n                    </Row>\r\n                    <hr className=\"divider\"/>   \r\n\r\n                    \r\n                    {events.map( ({name, date, host, details}, index) => {\r\n                        return <Row key={index} style={styles.container}>\r\n                                    <Col style={styles.record}>{name} </Col>\r\n                                    <Col style={styles.record}>{date}</Col>\r\n                                    <Col style={styles.record}>{host}</Col>\r\n                                    <Col style={styles.record}>{details} </Col>\r\n                                </Row>                                   \r\n                    })}\r\n                    <hr className=\"divider\"/>\r\n\r\n                </Container>\r\n*/}","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\CreateEvent.js",["283","284","285","286","287","288","289","290","291","292"],"import React, { useState } from 'react';\r\nimport {Form, Container, Row, Button, Col, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {DatePickerInput } from 'rc-datepicker';\r\n// CSS import goes here\r\nimport 'rc-datepicker/lib/style.css';\r\nimport './../assets/css/BaseComponents.css';\r\nimport './../assets/css/EventManagement.css';\r\n\r\nimport { useModalContext } from './MyContext';\r\n\r\n//custome Hooks\r\nfunction CreateEvent(){\r\n\r\n    var today = new Date();\r\n    var date = String(today.getFullYear() + \"-\" + (today.getMonth()+1) + \"-\" + today.getDate());\r\n\r\n    var [selectedStartDate, setSelectedStartDate] = useState(date);\r\n    var [selectedEndDate, setSelectedEndDate] = useState(date);\r\n\r\n    const { register, errors, watch, handleSubmit } = useForm();\r\n    \r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n\r\n    const onSubmit = data => {\r\n        console.log(\"Event Added\");\r\n        toggleModelOpen(false);\r\n    }\r\n\r\n    const styles = [\r\n        {\r\n            width:\"100%\",\r\n        }\r\n    ]\r\n\r\n    const selectStartDateHandler = (date) => {\r\n        console.log(date)\r\n        setSelectedStartDate(date);\r\n    }\r\n\r\n    const selectEndDateHandler = (date) => {\r\n        console.log(date)\r\n        setSelectedEndDate(date);\r\n    }\r\n\r\n    return  <>\r\n                <Container>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Group as={Row} controlId=\"formBasicEvent Name\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"name\" type=\"text\" placeholder=\"Event Name\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventHost\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"eventHost\" type=\"text\" placeholder=\"Event Host\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventStartDate\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                            <DatePickerInput className=\"col-12 date-picker\"\r\n                                             onChange={selectStartDateHandler}\r\n                                             className='my-custom-datepicker-component'\r\n                                             placeholder=\"Start Date\"\r\n                                             />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventEndDate\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                            <DatePickerInput className=\"col-12 date-picker\"\r\n                                             onChange={selectEndDateHandler}\r\n                                             className='my-custom-datepicker-component'\r\n                                             placeholder=\"End Date\"\r\n                                             />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formBasicEventDescription\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control as=\"textarea\" rows={3} name=\"description\" type=\"text\" placeholder=\"Description\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Button size=\"lg\" variant=\"dark\" type=\"submit\" block>\r\n                                    Submit Proposal\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n}\r\nexport default CreateEvent;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\MainLobby.js",["293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport  { useHistory } from 'react-router-dom';\r\nimport { Container, Row, Col, Image, Button } from 'react-bootstrap'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\n\r\nimport ImageMapper from 'react-image-mapper';\r\nimport IMAGE_URL from './../assets/images/main-lobby.jpg'\r\nimport MyContext, { useModalContext,  useHeaderContext, useUserContext } from './MyContext';\r\n\r\n\r\n// APIs goes here\r\nimport { RefreshToken } from './API/Auth';\r\nimport { EventOptions } from './API/userAPIs';\r\n\r\n// css goes here\r\nimport './../assets/css/MainLobby.css';\r\n\r\nconst imgs = {\r\n    src1:\"https://cloud.netlifyusercontent.com/assets/344dbf88-fdf9-42bb-adb4-46f01eedd629/3aaa3d4c-33d5-4df8-8dc2-17fb1a0f302a/15.jpg\",\r\n    src2:\"https://lh3.googleusercontent.com/proxy/Tj_crS8zZBsCE383p0KL3HxPW44QJZeAuW1wyNBgXMWy9mfcme9h0TEgmD9dOHwZ1dfpLI9C4e6NdNo1TsOHieipKjMCbvyQ2RfgBeilIvIb_J_xGS3APNIxML9zPaXn6RGCMaBx3ryuGaLmx-SR0wGZjBSm4-aduicD2aG7FktUmaenjiwcY4c\",\r\n    src3:\"https://lh3.googleusercontent.com/proxy/Tj_crS8zZBsCE383p0KL3HxPW44QJZeAuW1wyNBgXMWy9mfcme9h0TEgmD9dOHwZ1dfpLI9C4e6NdNo1TsOHieipKjMCbvyQ2RfgBeilIvIb_J_xGS3APNIxML9zPaXn6RGCMaBx3ryuGaLmx-SR0wGZjBSm4-aduicD2aG7FktUmaenjiwcY4c\",\r\n    src4:\"http://www.onextrapixel.com/wp-content/uploads/2012/01/products-design-3.jpg\",\r\n    src5: \"https://assets.crowdspring.com/marketing/landing-page/crowdspring-product-design-phase1-1120.jpg\"\r\n}\r\n\r\nconst styles = {\r\n    img: {\r\n        width:100,\r\n        height:100\r\n    },\r\n    btn:{\r\n       height:\"20vh\",\r\n       width:\"15vh\",\r\n       marginTop:\"50px\",\r\n    },\r\n    userBtn:{\r\n        height:\"20vh\",\r\n        width:\"20vh\",\r\n        marginTop:\"50px\",\r\n    },\r\n    align:{\r\n        marginLeft:\"10px !important\"\r\n    }\r\n}\r\n\r\n// const IMAGE_URL = \"https://c1.staticflickr.com/5/4052/4503898393_303cfbc9fd_b.jpg\" \r\nconst AREAS_MAP = { name: \"my-map\",\r\nareas: [\r\n  { name: \"1\", shape: \"poly\", coords: [25,33,27,300,128,240,128,94], preFillColor: \"green\", fillColor: \"blue\"  },\r\n  { name: \"2\", shape: \"poly\", coords: [219,118,220,210,283,210,284,119], preFillColor: \"pink\"  },\r\n  { name: \"3\", shape: \"poly\", coords: [381,241,383,94,462,53,457,282], fillColor: \"yellow\"  },\r\n  { name: \"4\", shape: \"poly\", coords: [245,285,290,285,274,239,249,238], preFillColor: \"red\"  },\r\n  { name: \"5\", shape: \"circle\", coords: [170, 100, 25 ] },\r\n]}\r\n\r\n\r\nfunction MainLobby(){\r\n\r\n    const history = useHistory();\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n    const [user, setUser] = useUserContext();\r\n\r\n    var [userRole, setUserRole] = useState();\r\n\r\n    const [eventOptions, setEventOptions] = useState();\r\n\r\n    const {state, dispatch} = useContext(MyContext);\r\n\r\n    const ID = history.location.pathname.split(\"/\").pop();\r\n\r\n    const catwalkHandler = () => {\r\n            history.push(history.location.pathname + \"/catwalk\");\r\n    }\r\n\r\n    const helpDeskHandler = () => {\r\n        history.push(\"/main-lobby/\" + ID + \"/help-desk\")\r\n    }\r\n\r\n    const exhibitorsHandler = () => {\r\n        history.push(\"/main-lobby/\" + ID + \"/exhibitors\");\r\n    }\r\n\r\n    const webinarHandler = () => {\r\n        history.push(\"/main-lobby/\" + ID + \"/webinar\");\r\n    }\r\n\r\n    const userManagementHandler = () => {\r\n        history.push(\"/main-lobby/\" + ID + \"/user-management\");\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        EventOptions(ID)\r\n        .then(res => {\r\n            setUserRole(res.data.role);\r\n            setEventOptions(res.data.event);\r\n        }).catch(err => {\r\n            console.log(err)\r\n            if(err.message === \"INVALID\"){\r\n                toast(\"Please login to access events\", {\r\n                    type:\"info\",\r\n                    });\r\n            }else if(err.message === \"EXPIRED\"){\r\n                toast(\"You must login first\", {\r\n                    type:\"info\",\r\n                    });\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n            }else if(err.message === \"REFRESH\"){\r\n                RefreshToken()\r\n                .then(res => {\r\n                    if(res.data.success){\r\n                        console.log(\"Token Refreshed\")\r\n                        var d = new Date();\r\n                        d.setSeconds(d.getSeconds() + res.data.user.tokenExpiry);\r\n                        res.data.user.tokenExpiry = d;\r\n                        setUser(res.data.user);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n                })\r\n            }\r\n        });\r\n\r\n    }, [])\r\n\r\n    return  <>            \r\n                <ToastContainer \r\n                    position=\"top-left\"\r\n                    autoClose={2000}\r\n                    hideProgressBar={true}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                />\r\n\r\n                <div className=\"main-lobby\">\r\n                    <Container style={styles.align} >\r\n                    <Row>\r\n                        <Col>\r\n                            <Button onClick={catwalkHandler}  style={{...styles.btn, ...{display: eventOptions && eventOptions.Catwalk? \"block\": \"none\"} } } variant=\"outline-light\">{eventOptions && eventOptions.Catwalk?eventOptions.Catwalk:\"\" }</Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button onClick={helpDeskHandler} style={{...styles.btn, ...{display: eventOptions && eventOptions.HelpDesk? \"block\": \"none\"} }} variant=\"outline-light\">{eventOptions && eventOptions.HelpDesk?eventOptions.HelpDesk:\"\" } </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button onClick={userManagementHandler} style={{...styles.userBtn, ...{display: (userRole === \"organizer\" || userRole === \"host\") ? \"block\" : \"none\" }}} variant=\"outline-light\">User Management </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button onClick={exhibitorsHandler} style={{...styles.btn, ...{display: eventOptions && eventOptions.Exhibitors? \"block\": \"none\"} }} variant=\"outline-light\">{eventOptions && eventOptions.Exhibitors?eventOptions.Exhibitors:\"\" } </Button>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button onClick={webinarHandler} style={{...styles.btn, ...{display: eventOptions && eventOptions.Webinar? \"block\": \"none\"} }} variant=\"outline-light\">{eventOptions && eventOptions.Webinar?eventOptions.Webinar:\"\" } </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                </div>   \r\n            </>\r\n\r\n}\r\n\r\nexport default MainLobby;\r\n\r\n                    {/* <Container>\r\n                        <Row>\r\n                            <Col></Col>\r\n                            <Col></Col>\r\n                            <Col>\r\n                                <Image style={styles.img} src={imgs.src1} rounded/>\r\n                            </Col>\r\n                            <Col>\r\n                                <Image style={styles.img} src={imgs.src2} rounded/>\r\n                            </Col>\r\n                            <Col>\r\n                                <Image style={styles.img} src={imgs.src3} rounded/>\r\n                            </Col>\r\n                            <Col>\r\n                                <Image style={styles.img} src={imgs.src4} rounded/>\r\n                            </Col>\r\n                            <Col>\r\n                                <Image style={styles.img} src={imgs.src5} rounded/>\r\n                            </Col>\r\n                            <Col></Col>\r\n                            <Col></Col>\r\n                        </Row>\r\n                    </Container> */}\r\n                    {/* <ImageMapper src={IMAGE_URL} map={AREAS_MAP} width={1400} /> */}\r\n","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\CatWalk.js",["307","308","309","310","311","312","313","314","315","316"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Row, Col, Image, Container, Button } from 'react-bootstrap';\r\nimport TextEllipsis from 'react-text-ellipsis';\r\nimport FloatActionButton from './FloatActionButton';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport MyContext, { useModalContext,  useHeaderContext, useUserContext } from './MyContext';\r\n\r\n// APIs goes here\r\nimport { RefreshToken } from './API/Auth';\r\nimport { EventOptions } from './API/userAPIs';\r\n\r\n\r\n\r\nconst videos = [\r\n    {\r\n        catwalk:\"https://www.youtube.com/embed/I5HzV76t01c\",\r\n        title:\"VEMINA CITY CATWALK CPM Moscow Fall 2016 2017 by Fashion Channel\",\r\n        description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\"\r\n    },\r\n    {\r\n        catwalk:\"https://www.youtube.com/embed/7ccefq8s7eU\",\r\n        title:\"Evolving Trends in Runway Fashion - 2017 to 2018 Spring-Summer Seasons\",\r\n        description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\"\r\n    },\r\n    {\r\n        catwalk:\"https://www.youtube.com/embed/-PtDp5C6QB4\",\r\n        title:\"Evolving Trends in Runway Fashion - 2018 to 2019 Spring-Summer Seasons\",\r\n        description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\"\r\n    }\r\n]\r\n\r\nconst styles = {\r\n    frame : {\r\n        width:\"100%\",\r\n        height:\"100%\"\r\n    },\r\n    align : {\r\n        textAlign:\"left\"\r\n    },\r\n    header: {\r\n        backgroundColor:\"skyblue\",\r\n        textAlign:\"left\"\r\n    },\r\n    tile:{\r\n        width:\"100%\",\r\n        height:\"30%\",\r\n        cursor: \"pointer\"\r\n    },\r\n    videoFrame:{\r\n        width:\"100%\",\r\n        height:\"40%\"\r\n    }\r\n}\r\n\r\nfunction CatWalk(){\r\n\r\n    const [selectedVideo, setSelectedVideo] = useState(videos[0]);\r\n    const [userRole, setUserRole] = useState();\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n    const [user, setUser] = useUserContext();\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const selectCatwalkHandler = (catwalk) => {\r\n        setSelectedVideo(catwalk);\r\n        console.log(\"Working\")\r\n    }\r\n\r\n    const editVideoHandler = () => {\r\n        history.push(history.location.pathname + \"/add-videos\");\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n            var arr = history.location.pathname.split(\"/\");\r\n            console.log(arr)\r\n        \r\n            var ID = -1;\r\n            for(let i of arr)\r\n                if(!Number.isNaN(parseInt(i))){\r\n                    ID = parseInt(i);\r\n                    break;\r\n                }\r\n                \r\n\r\n            if(ID === -1){\r\n                history.goBack();\r\n                return;\r\n            }\r\n\r\n            EventOptions(ID)\r\n            .then(res => {\r\n                setUserRole(res.data.role);\r\n            }).catch(err => {\r\n                console.log(err)\r\n                if(err.message === \"INVALID\"){\r\n                    toast(\"Please login to access events\", {\r\n                        type:\"info\",\r\n                        });\r\n                }else if(err.message === \"EXPIRED\"){\r\n                    toast(\"You must login first\", {\r\n                        type:\"info\",\r\n                        });\r\n                        localStorage.clear();\r\n                        toggleHeader(true);\r\n                        window.location.reload();\r\n                        history.push(\"/\");\r\n                }else if(err.message === \"REFRESH\"){\r\n                    RefreshToken()\r\n                    .then(res => {\r\n                        if(res.data.success){\r\n                            console.log(\"Token Refreshed\")\r\n                            var d = new Date();\r\n                            d.setSeconds(d.getSeconds() + res.data.user.tokenExpiry);\r\n                            res.data.user.tokenExpiry = d;\r\n                            setUser(res.data.user);\r\n                        }\r\n                    }).catch(err => {\r\n                        console.log(err);\r\n                        localStorage.clear();\r\n                        toggleHeader(true);\r\n                        window.location.reload();\r\n                        history.push(\"/\");\r\n                    })\r\n                }\r\n            });\r\n    \r\n    }, [])\r\n\r\n    return  <>\r\n                    <hr/>\r\n                    <Container>\r\n                    <Row style={{display: (userRole === \"attendee\") ? \"none\" : \"block\" }}>\r\n                        <Col>\r\n                            <Button className=\"mb-5 float-right\" variant=\"secondary\" onClick={ editVideoHandler }>Edit</Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h1 style={styles.header}> CatWalks </h1>\r\n                                </Col>    \r\n                            </Row>  \r\n                            <Row>\r\n                                <Col>\r\n                                    {videos.map( ({catwalk, title, description}, index) => (\r\n                                        <span key = {index}>\r\n                                            <Row style={styles.tile} onClick={ () => selectCatwalkHandler({catwalk, title, description}) }>\r\n                                                <Col>\r\n                                            \r\n                                                <iframe\r\n                                                    \r\n                                                    style = {styles.frame}\r\n                                                    src= {catwalk}\r\n                                                >\r\n                                                </iframe>\r\n\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <p style={styles.align}><b>{title} </b></p>\r\n                                                    <TextEllipsis \r\n                                                        style={styles.align}\r\n                                                        lines={4} \r\n                                                        tag={'p'} \r\n                                                        ellipsisChars={'...'} \r\n                                                        tagClass={'className'} \r\n                                                        debounceTimeoutOnResize={200} \r\n                                                        useJsOnly={true} \r\n                                                        onResult={(result) => { \r\n                                                            if (result === TextEllipsis.RESULT.TRUNCATED)\r\n                                                                console.log('text get truncated');\r\n                                                            else \r\n                                                                console.log('text does not get truncated');\r\n                                                            }}>\r\n                                                    {description}\r\n                                                    </TextEllipsis>                                                        \r\n                                                </Col>\r\n                                            </Row>\r\n                                            <hr/>\r\n                                        </span>\r\n                                    ))\r\n                                    }\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n  \r\n                        <Col>\r\n                            <Row style={styles.videoFrame }>\r\n                                <Col>\r\n                                    <iframe \r\n                                        style = {styles.frame}\r\n                                        src= {selectedVideo.catwalk}\r\n                                        frameBorder=\"0\" \r\n                                        allowFullScreen>\r\n                                    </iframe>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h4 style={styles.align}>\r\n                                        { selectedVideo.title }\r\n                                    </h4>\r\n                                    <p style={styles.align}>\r\n                                        { selectedVideo.description }\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    </Container>\r\n                    <FloatActionButton />\r\n\r\n            </>\r\n\r\n}\r\nexport default CatWalk;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Exhibitors.js",["317","318","319","320","321"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Container, Row, Col, Image, Button,Nav } from 'react-bootstrap'\r\nimport stall from './../assets/images/stall.png';\r\nimport FloatActionButton from './FloatActionButton';\r\nimport DynamicModal from './DynamicModal';\r\n\r\nimport './../assets/css/BaseComponents.css';\r\nimport AddStall from './AddStall';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport MyContext, { useModalContext,  useHeaderContext, useUserContext } from './MyContext';\r\n\r\n// APIs goes here\r\nimport { RefreshToken } from './API/Auth';\r\nimport { EventOptions } from './API/userAPIs';\r\n\r\n\r\nconst exhibitors = [{\r\n    \"name\": \"Exhibitor 1\",\r\n    \"img\":stall\r\n},{\r\n    \"name\": \"Exhibitor 2\",\r\n    \"img\":stall\r\n},{\r\n    \"name\": \"Exhibitor 3\",\r\n    \"img\":stall\r\n},{\r\n    \"name\": \"Exhibitor 4\",\r\n    \"img\":stall\r\n},{\r\n    \"name\": \"Exhibitor 5\",\r\n    \"img\":stall\r\n},{\r\n    \"name\": \"Exhibitor 6\",\r\n    \"img\":stall\r\n},{\r\n    \"name\": \"Exhibitor 7\",\r\n    \"img\":stall\r\n},{\r\n    \"name\": \"Exhibitor 8\",\r\n    \"img\":stall\r\n}\r\n]\r\n\r\n\r\n\r\nconst styles = {\r\n    stall:{\r\n        width: \"calc(100px + 3vmin)\",\r\n        height: \"calc(100px + 3vmin)\"\r\n    },\r\n    stallContainer:{\r\n        cursor: \"pointer\",\r\n    },\r\n    main:{\r\n        minHeight:\"80vh\"\r\n    },\r\n    align:{\r\n        textAlign:\"left\",\r\n    },\r\n    sidebar:{\r\n        textAlign:\"left\",\r\n        color:\"white\"\r\n    }\r\n}\r\n\r\nfunction Exhibitors(){\r\n\r\n    const history = useHistory();\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [content, setContent] = useState();\r\n    const [user, setUser] = useUserContext();\r\n    const [userRole, setUserRole] = useState();\r\n    const [header, toggleHeader] = useHeaderContext();\r\n\r\n\r\n    const addStallHandler = () => {\r\n        let cont = {\r\n            header:\"Add New Stall\",\r\n            component:<AddStall/>,\r\n            footer:\"\"\r\n          }\r\n        setContent(cont);\r\n        toggleModelOpen(true);\r\n        \r\n    }    \r\n\r\n    const exhibitorStallHandler = () => {\r\n        history.push(history.location.pathname + \"/exhibitor-stall\");\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        var arr = history.location.pathname.split(\"/\");\r\n        console.log(arr)\r\n    \r\n        var ID = -1;\r\n        for(let i of arr)\r\n            if(!Number.isNaN(parseInt(i))){\r\n                ID = parseInt(i);\r\n                break;\r\n            }\r\n            \r\n\r\n        if(ID === -1){\r\n            history.goBack();\r\n            return;\r\n        }\r\n\r\n        EventOptions(ID)\r\n        .then(res => {\r\n            setUserRole(res.data.role);\r\n        }).catch(err => {\r\n            console.log(err)\r\n            if(err.message === \"INVALID\"){\r\n                toast(\"Please login to access events\", {\r\n                    type:\"info\",\r\n                    });\r\n            }else if(err.message === \"EXPIRED\"){\r\n                toast(\"You must login first\", {\r\n                    type:\"info\",\r\n                    });\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n            }else if(err.message === \"REFRESH\"){\r\n                RefreshToken()\r\n                .then(res => {\r\n                    if(res.data.success){\r\n                        console.log(\"Token Refreshed\")\r\n                        var d = new Date();\r\n                        d.setSeconds(d.getSeconds() + res.data.user.tokenExpiry);\r\n                        res.data.user.tokenExpiry = d;\r\n                        setUser(res.data.user);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n                })\r\n            }\r\n        });\r\n\r\n    }, [])\r\n\r\n\r\n    return  <>\r\n                {modalOpen?  <DynamicModal content={content} />: ''}\r\n            <hr/>\r\n                <Row style={styles.main}>\r\n                    <Col sm=\"3\" className=\"sidebar\">\r\n                        <h3 style={styles.sidebar}>Exhibitors</h3>\r\n                        <hr />\r\n                        <Nav.Link style={styles.align} className=\"sidebar-item ml-4\" href=\"#aboutUs\">Daily Wear</Nav.Link>\r\n                        <hr />\r\n                        <Nav.Link style={styles.align} className=\"sidebar-item ml-4\" href=\"#contactUs\">Holiday Dresses</Nav.Link>\r\n                        <hr />\r\n                        <Nav.Link style={styles.align} className=\"sidebar-item ml-4\" href=\"#login\" >Accessaries</Nav.Link>\r\n                        <hr />\r\n                        <Nav.Link style={styles.align} className=\"sidebar-item ml-4\" href=\"#login\" >Communion Dresses</Nav.Link>\r\n                        <hr />\r\n                        <Nav.Link style={styles.align} className=\"sidebar-item ml-4\" href=\"#login\" >Exhibitors</Nav.Link>\r\n                        <hr />\r\n                        <Nav.Link style={styles.align} className=\"sidebar-item ml-4\" href=\"#login\" >Weddings</Nav.Link>\r\n                    </Col>\r\n                    <Col sm=\"9\"> \r\n                        <Container>       \r\n                            <Row>\r\n                                <Col>\r\n                                    <h2 className='float-left' style={styles.align}>Daily Wear</h2>\r\n                                    <Button className='float-right'  style={{display: (userRole === \"attendee\") ? \"none\":\"block\" }} onClick={addStallHandler} variant='secondary'>\r\n                                        Add Stall\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                            <hr/>\r\n                            <Row>\r\n                                {exhibitors.map(({name, img}, index)=>(\r\n                                    <Col key={index} onClick={exhibitorStallHandler} className=\"mb-5 mx-4\" style={styles.stallContainer}>\r\n                                        <Image src={img} style={styles.stall}/>\r\n                                        <p>{name}</p>\r\n                                        <Button className=\"ml-5\" style={{display: (userRole === \"attendee\") ? \"none\":\"block\" , fontSize:\"10px\"}} variant=\"secondary\">Remove</Button>\r\n                                    </Col>         \r\n                                ))}\r\n                            </Row>\r\n                        </Container>\r\n                    </Col>\r\n                </Row>\r\n                <FloatActionButton />\r\n            </>\r\n\r\n}\r\nexport default Exhibitors;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\AddStall.js",["322","323","324","325","326","327"],"import React from 'react';\r\n\r\nimport {Form, Container, Row, Button, Col, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n// CSS import goes here\r\nimport './../assets/css/BaseComponents.css';\r\nimport './../assets/css/EventManagement.css';\r\n\r\nimport { useModalContext } from './MyContext';\r\n\r\n\r\nfunction AddStall(){\r\n\r\n    const { register, errors, watch, handleSubmit } = useForm();\r\n    \r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n\r\n    const onSubmit = data => {\r\n        console.log(\"Stall Added\");\r\n        toggleModelOpen(false);\r\n    }\r\n\r\n    const styles = [\r\n        {\r\n            width:\"100%\",\r\n        }\r\n    ]\r\n\r\n    return  <>\r\n                <Container>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Group as={Row} controlId=\"formBasicStallName\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"name\" type=\"text\" placeholder=\"Stall Name\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicOwnerID\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"ownerID\" type=\"text\" placeholder=\"Owner ID\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicAboutUs\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"aboutus\" type=\"text\" placeholder=\"About US\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventDescription\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control as=\"textarea\" rows={5} name=\"description\" type=\"text\" placeholder=\"Description\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Button size=\"lg\" variant=\"dark\" type=\"submit\" block>\r\n                                    Add Stall\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n}\r\nexport default AddStall;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\ExhibitorStall.js",["328"],"import React from 'react';\r\nimport TextEllipsis from 'react-text-ellipsis';\r\nimport FloatActionButton from './FloatActionButton';\r\n\r\nimport { Container, Row, Col, Image } from 'react-bootstrap';\r\n\r\nimport exhibitorStall from './../assets/images/exhibitor-stall.jpg';\r\n\r\nconst styles = {\r\n    main:{\r\n        // minHeight:\"90vh\"\r\n    },\r\n    sidebar:{\r\n        backgroundColor:\"gray\",\r\n        color:\"white\"\r\n    },\r\n    exhibitorStall:{\r\n        position:\"cover\"\r\n    },\r\n    tile:{\r\n        width:\"100%\",\r\n        height:150,\r\n        marginTop:10\r\n    }\r\n}\r\n\r\nfunction ExhibitorStall(){\r\n\r\n    return  <>\r\n                {/* <Container> */}\r\n                    <Row style = {styles.main}>\r\n                        <Col sm=\"2\" style={styles.sidebar}>\r\n                            <br/>\r\n                            <h2>About Us</h2>\r\n                            <hr/>\r\n                            <TextEllipsis \r\n                                lines={8} \r\n                                tag={'p'} \r\n                                ellipsisChars={'...'} \r\n                                tagClass={'className'} \r\n                                debounceTimeoutOnResize={200} \r\n                                useJsOnly={true} \r\n                                onResult={(result) => { \r\n                                    if (result === TextEllipsis.RESULT.TRUNCATED)\r\n                                        console.log('text get truncated');\r\n                                    else \r\n                                        console.log('text does not get truncated');\r\n                                    }}>\r\n                                It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using.\r\n                            </TextEllipsis>                                                        \r\n                            <br/>\r\n                            <h2>Description</h2>\r\n                            <hr/>\r\n                            <TextEllipsis \r\n                                lines={10} \r\n                                tag={'p'} \r\n                                ellipsisChars={'...'} \r\n                                tagClass={'className'} \r\n                                debounceTimeoutOnResize={200} \r\n                                useJsOnly={true} \r\n                                onResult={(result) => { \r\n                                    if (result === TextEllipsis.RESULT.TRUNCATED)\r\n                                        console.log('text get truncated');\r\n                                    else \r\n                                        console.log('text does not get truncated');\r\n                                    }}>\r\n                            'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n                            </TextEllipsis>                                                        \r\n\r\n                        </Col>\r\n                        <Col sm=\"8\">\r\n                            <Image src={exhibitorStall} style={styles.exhibitorStall} fluid/>\r\n                        </Col>\r\n                        <Col sm=\"2\" style = {styles.sidebar}>\r\n                            <Row>\r\n                                <Image style={styles.tile} src=\"https://cached.imagescaler.hbpl.co.uk/resize/scaleWidth/743/cached.offlinehbpl.hbpl.co.uk/news/OMC/fashionmain-2014091009305823.jpg\"></Image>\r\n                            </Row>\r\n                            <Row>\r\n                            <Image style={styles.tile} src=\"https://cached.imagescaler.hbpl.co.uk/resize/scaleWidth/743/cached.offlinehbpl.hbpl.co.uk/news/OMC/fashionmain-2014091009305823.jpg\"></Image>\r\n                            </Row>\r\n                            <Row>\r\n                            <Image style={styles.tile} src=\"https://cached.imagescaler.hbpl.co.uk/resize/scaleWidth/743/cached.offlinehbpl.hbpl.co.uk/news/OMC/fashionmain-2014091009305823.jpg\"></Image>\r\n                            </Row>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                {/* </Container> */}\r\n                <FloatActionButton />\r\n            </>\r\n}\r\nexport default ExhibitorStall;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Webinar.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\HelpDesk.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Setting.js",["329","330"],"import React from 'react';\r\nimport {Form, Container, Row, Button, Col} from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction Setting(){\r\n\r\n    const { register, errors, watch, handleSubmit } = useForm();\r\n\r\n    const onSubmit = () => {\r\n        console.log(\"Updated\")\r\n    }\r\n\r\n    return  <>\r\n                <Container>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Row>\r\n                            <Col sm={{span:6, offset:3}}>\r\n                                <h1>Settings</h1>\r\n                            </Col>\r\n                        </Row>\r\n                    \r\n                        <Row>\r\n                            <Col sm={{span:6, offset:3}}>\r\n                                <hr className=\"divider\"/>\r\n                            </Col>\r\n                        </Row>\r\n                    \r\n                        <Form.Group as={Row} controlId=\"formBasicFirstName\">\r\n                            {/* <Form.Label>Email address</Form.Label> */}\r\n                            <Col sm={{span:6, offset:3}}>\r\n                                <Form.Control name=\"firstName\" type=\"text\" placeholder=\"James\" ref={register} required/>\r\n                                {/* <Form.Text className=\"text-muted\">\r\n                                    {errors.firstName && \"Your input is required\"}\r\n                                </Form.Text> */}\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicLastName\">\r\n                            <Col sm={{span:6, offset:3}}>\r\n                            {/* <Form.Label block>Password</Form.Label> */}\r\n                                <Form.Control name=\"lastName\" type=\"text\" placeholder=\"Martin\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEmail\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:6, offset:3}}>\r\n                                <Form.Control name=\"email\" type=\"email\" placeholder=\"james@abc.com\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicPhone\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:6, offset:3}}>\r\n                                <Form.Control name=\"phone\" type=\"tel\" pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{3}\" placeholder=\"071-56-223\" ref={register}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicAddress1\">\r\n                            {/* <Form.Label>Address</Form.Label> */}\r\n                            <Col sm={{span:6, offset:3}}>\r\n                                <Form.Control name=\"address\" type=\"text\" placeholder=\"abc street UK\" ref={register}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicRole\">\r\n                            {/* <Form.Label>Address</Form.Label> */}\r\n                            <Col sm={{span:6, offset:3}}>\r\n                                <Form.Control name=\"role\" type=\"text\" placeholder=\"Admin\" ref={register}/>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                            <Form.Group as={Row} controlId=\"formBasicRole\">\r\n                                <Col sm={{span:6, offset:3}}>\r\n                                    <Button size=\"lg\" variant=\"dark\" type=\"submit\" block>\r\n                                        Update\r\n                                    </Button>\r\n                                </Col>\r\n                            </Form.Group>\r\n                        </Form>\r\n                </Container>\r\n            </>\r\n}\r\nexport default Setting;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\API\\auth.js",["331","332","333"],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\API\\Auth.js",["334"],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\API\\Config.js",[],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\DashboardUser.js",["335","336","337","338","339"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { Button, Container, Row, Col } from 'react-bootstrap';\r\nimport '../assets/css/Dashboard.css';\r\n\r\nimport MyContext, { useModalContext,  useHeaderContext, useUserContext } from './MyContext';\r\n// APIs calling\r\nimport {UserDashboardData} from './API/userAPIs';\r\nimport { RefreshToken } from './API/Auth';\r\n\r\nconst styles = {\r\n    container:{\r\n        marginTop:20,\r\n        outline:5,\r\n        border:5\r\n    },\r\n    title:{\r\n        fontSize:\"calc(6px + 3vmin)\",\r\n        textAlign: \"left\",\r\n        marginTop:20,\r\n        fontWeight:\"bold\"\r\n    },\r\n    heading:{\r\n        fontSize:\"calc(5px + 3vmin)\",\r\n        textAlign:\"left\"\r\n    },\r\n    circles:{\r\n        marginBottom: 30\r\n    },\r\n    record:{\r\n        fontSize:\"calc(3px + 2vmin)\",\r\n        textAlign:\"left\"\r\n    },\r\n    eventSelection:{\r\n        cursor:\"pointer\"\r\n    }\r\n}\r\n\r\nfunction DashboardUser(){\r\n    const history = useHistory();\r\n\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n    const [user, setUser] = useUserContext();\r\n\r\n    const {state, dispatch} = useContext(MyContext);\r\n\r\n\r\n    const [notification, setNotifications] = useState([]);\r\n    const [attendingEvents, setAttendingEvents] = useState([]);\r\n    const [organizingEvents, setOrganizingEvents] = useState([]);\r\n    const [myStalls, setMyStalls] = useState([])\r\n    \r\n    const [totalOrganizingEvents, setTotalOrganizingEvents] = useState();\r\n    const [totalAttendingEvents, setTotalAttendingEvents] = useState();\r\n    const [totalUpcomingEvents, setTotalUpcomingEvents] = useState();\r\n    const [totalStalls, setTotalStalls] = useState();\r\n\r\n    const attendingEventHandler = (id) => {\r\n        console.log(\"Row Clicked\", id);\r\n        dispatch({type:\"ATTEND-EVENT\", params:{\"id\":id} });\r\n        history.push(\"/main-lobby/\" + id);\r\n    }\r\n    \r\n    const organizingEventHandler = (id) => {\r\n        console.log(\"Row Clicked\", id);\r\n        dispatch({type:\"ATTEND-EVENT\", params:{\"id\":id} });\r\n        history.push(\"/main-lobby/\" + id);\r\n    }\r\n\r\n    \r\n    const stallEventHandler = (id) => {\r\n        console.log(\"Row Clicked\", id);\r\n        dispatch({type:\"ATTEND-EVENT\", params:{\"id\":id} });\r\n        history.push(\"/main-lobby/\" + id);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        UserDashboardData()\r\n        .then(res=>{\r\n            setTotalOrganizingEvents(res.data.totalOrganizeEvents);\r\n            setTotalAttendingEvents(res.data.totalAttendingEvents);\r\n            setTotalUpcomingEvents(res.data.totalUpcomingEvents);\r\n            setTotalStalls(res.data.totalStalls);\r\n\r\n            setNotifications(res.data.notifications);\r\n            setAttendingEvents(res.data.attendingEvents);\r\n            setOrganizingEvents(res.data.organizingEvents);\r\n            setMyStalls(res.data.myStalls);\r\n            user.isLogin = true;\r\n            setUser(user);\r\n        }).catch(err => {\r\n            console.log(err)\r\n            if(err.message === \"INVALID\"){\r\n                toast(\"Please login to access events\", {\r\n                    type:\"info\",\r\n                    });\r\n            }else if(err.message === \"EXPIRED\"){\r\n                toast(\"You must login first\", {\r\n                    type:\"info\",\r\n                    });\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n            }else if(err.message === \"REFRESH\"){\r\n                RefreshToken()\r\n                .then(res => {\r\n                    if(res.data.success){\r\n                        console.log(\"Token Refreshed\")\r\n                        var d = new Date();\r\n                        d.setSeconds(d.getSeconds() + res.data.user.tokenExpiry);\r\n                        res.data.user.tokenExpiry = d;\r\n                        setUser(res.data.user);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n                })\r\n            }\r\n        });\r\n    }, [])\r\n\r\n\r\n    return  <>\r\n            <ToastContainer \r\n                position=\"top-left\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <div className=\"dashboard\">\r\n                <Container>\r\n                    <Row style={styles.circles} className=\"justify-content-center\">\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                                <h3> {totalUpcomingEvents} </h3>\r\n                            </Button>\r\n                            <p>Upcoming Events</p>\r\n                        </Col>\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                                <h3> {totalAttendingEvents} </h3>\r\n                            </Button>\r\n                            <p>Attending Events</p>\r\n                        </Col>\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                            <h3> {totalOrganizingEvents} </h3>\r\n                            </Button>\r\n                            <p>Organizing Events</p>                            \r\n                        </Col>\r\n                        <Col xs={4} md>\r\n                            <Button className=\"circular-progress\">\r\n                                <h3> {totalStalls} </h3>\r\n                            </Button>\r\n                            <p>Total Stalls</p>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>Notifications</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    {notification.map( ({event, details}, index) => {\r\n                    return <div key={\"notification\" + index}>\r\n                                <Row key={\"notification-container\" + index} style={styles.container}>\r\n                                    <Col className=\"event-items\">\r\n                                        <Row>\r\n                                            <Col style={styles.heading}>Event: {event} </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col style={styles.record}>Details: {details} </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>  \r\n                                <hr className=\"divider\"/>\r\n                            </div>                                                          \r\n                    })}\r\n    \r\n                </Container>\r\n\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>Attending Events</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    {attendingEvents.map( ({id, name, date, host, details}, index) => {\r\n                        return <div key={\"attending\" + index}>\r\n                                    <Row  key={\"attending-container\" + index}  style={styles.container}>\r\n                                        <Col onClick={ () => attendingEventHandler(id)}  className=\"event-items\"  style={styles.eventSelection}>\r\n                                            <Row>\r\n                                            <Col style={styles.heading}>{name} </Col>\r\n                                            <Col style={styles.record}>Date & Time: {date} 10 pm</Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                            <Col style={styles.record}>Organizier: {host} </Col>\r\n                                            <Col style={styles.record}>Details: {details} </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row> \r\n                                    <hr className=\"divider\"/>\r\n                                </div>       \r\n                    })}\r\n                </Container>\r\n\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>Organizing Events</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    {organizingEvents.map( ({id, name, date, host, details}, index) => {\r\n                        return <div key={\"organize\" + index}>\r\n                                    <Row key={\"organize-container\" + index} style={styles.container}>\r\n                                        <Col onClick={ () => organizingEventHandler(id)}  className=\"event-items\"  style={styles.eventSelection}>\r\n                                            <Row>\r\n                                            <Col style={styles.heading}>{name} </Col>\r\n                                            <Col style={styles.record}>Date & Time: {date} 10 pm</Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                            <Col style={styles.record}>Organizier: {host} </Col>\r\n                                            <Col style={styles.record}>Details: {details} </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row> \r\n                                    <hr className=\"divider\"/>\r\n                                </div>  \r\n                                                                \r\n                    })}\r\n                </Container>\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>My Stalls</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    {myStalls.map( ({id, name, date, host, details}, index) => {\r\n                        return <div key={\"stall\"+ index}>\r\n                                    <Row key={\"stall-container\"+ index} style={styles.container}>\r\n                                        <Col onClick={ () => stallEventHandler(id)}  className=\"event-items\"  style={styles.eventSelection}>\r\n                                            <Row>\r\n                                            <Col style={styles.heading}>{name} </Col>\r\n                                            <Col style={styles.record}>Date & Time: {date} 10 pm</Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                            <Col style={styles.record}>Organizier: {host} </Col>\r\n                                            <Col style={styles.record}>Details: {details} </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row> \r\n                                    <hr className=\"divider\"/>\r\n                                </div>  \r\n                                                                \r\n                    })}\r\n                </Container>\r\n\r\n            </div>\r\n            </>\r\n\r\n}\r\nexport default DashboardUser;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\OrganizingEvent.js",["340","341","342","343","344"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Container, Row, Col, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport SearchField from \"react-search-field\";\r\nimport '../assets/css/Dashboard.css';\r\nimport { useModalContext,  useHeaderContext, useUserContext } from './MyContext';\r\nimport CreateEvent from './CreateEvent';\r\nimport DynamicModal from './DynamicModal';\r\nimport { RefreshToken } from './API/Auth';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// APIs\r\nimport { OrganizingEventsData } from \"./API/userAPIs\";\r\n\r\nconst tmp = [{\r\n    \"id\":1,\r\n    \"name\":\"Health Awareness\",\r\n    \"date\":\"10-1-2021\",\r\n    \"host\":\"Ali\",\r\n    \"details\":\"This time of events is 4pm\"\r\n},{\r\n    \"name\":\"Catwalk Show\",\r\n    \"date\":\"10-1-2021\",\r\n    \"host\":\"James\",\r\n    \"details\":\"This time of events is 4pm\"\r\n},{\r\n    \"name\":\"Games Theory\",\r\n    \"date\":\"10-1-2021\",\r\n    \"host\":\"Aqib\",\r\n    \"details\":\"This time of events is 4pm\"\r\n}]\r\n\r\nconst styles = {\r\n    container:{\r\n        marginTop:20,\r\n    },\r\n    title:{\r\n        fontSize:\"calc(5px + 3vmin)\",\r\n        textAlign: \"left\",\r\n        marginTop:20\r\n    },\r\n    heading:{\r\n        fontSize:\"calc(5px + 3vmin)\",\r\n        textAlign:\"left\"\r\n    },\r\n    circles:{\r\n        marginBottom: 30\r\n    },record:{\r\n        fontSize:\"calc(3px + 2vmin)\",\r\n        textAlign:\"left\"\r\n    },\r\n    searchField:{\r\n        borderRadius: \"50%\"\r\n    },\r\n    eventSelection:{\r\n        cursor:\"pointer\"\r\n    },\r\n}\r\n\r\nfunction OrganizingEvents(){\r\n\r\n    const history = useHistory();\r\n\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n    const [user, setUser] = useUserContext();\r\n\r\n    const [organizingEvents, setOrganizingEvents] = useState(tmp);\r\n    const [allEvents, setAllEvents] = useState([]);\r\n\r\n    const [content, setContent] = useState();\r\n\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    const searchHandler = () => {\r\n\r\n        if(searchQuery.trim() === \"\")\r\n            {\r\n                setOrganizingEvents(allEvents);\r\n            }\r\n        let eventList = []\r\n        for(let tmp of allEvents)\r\n            if(tmp.name.toLowerCase().includes(searchQuery.toLowerCase()))\r\n                eventList.push(tmp)\r\n                setOrganizingEvents(eventList)\r\n    }\r\n\r\n\r\n    const organizeEventHandler = () => {\r\n        let cont = {\r\n            header:\"Organize Event\",\r\n            component:<CreateEvent />,\r\n            footer:\"\"\r\n          }\r\n        setContent(cont);\r\n        toggleModelOpen(true);\r\n    }\r\n\r\n    \r\n    const selectedEventHandler = (name) => {\r\n        console.log(name)\r\n    }\r\n\r\n    useEffect(() => {\r\n        OrganizingEventsData()\r\n        .then(res => {\r\n            setOrganizingEvents(res.data)\r\n            setAllEvents(res.data);\r\n        }).catch(err => {\r\n            console.log(err)\r\n            if(err.message === \"INVALID\"){\r\n                toast(\"Please login to access events\", {\r\n                    type:\"info\",\r\n                    });\r\n            }else if(err.message === \"EXPIRED\"){\r\n                toast(\"You must login first\", {\r\n                    type:\"info\",\r\n                    });\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n            }else if(err.message === \"REFRESH\"){\r\n                RefreshToken()\r\n                .then(res => {\r\n                    if(res.data.success){\r\n                        console.log(\"Token Refreshed\")\r\n                        var d = new Date();\r\n                        d.setSeconds(d.getSeconds() + res.data.user.tokenExpiry);\r\n                        res.data.user.tokenExpiry = d;\r\n                        setUser(res.data.user);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n                })\r\n            }\r\n        })\r\n    },[])\r\n\r\n  \r\n    return  <>\r\n            {modalOpen?  <DynamicModal content={content} />: ''}\r\n\r\n            <ToastContainer \r\n                position=\"top-left\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n\r\n            <div className=\"dashboard\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm=\"5\"></Col>\r\n                        <Col sm=\"4\">\r\n                            <SearchField\r\n                                placeholder=\"Search...\"\r\n                                onChange={value => setSearchQuery(value)}\r\n                                searchText=\"\"\r\n                                className=\"float-right\"\r\n                                style={styles.searchField}\r\n                                onEnter={searchHandler}\r\n                                onSearchClick = {searchHandler}\r\n                                />\r\n                        </Col>\r\n                        <Col sm=\"3\">\r\n                            <Button onClick={organizeEventHandler} className=\"float-right\" variant=\"secondary\">Organize Event</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <Container>\r\n                    <Row style={styles.container}>\r\n                        <Col style={styles.title}>Upcoming Events</Col>\r\n                    </Row> \r\n                    <hr className=\"divider\"/>   \r\n                    {/* Here wil go dynamic UI */}\r\n                    {organizingEvents.map( ({name, date, host, details}, index) => {\r\n                        return <div key={\"events\"+index}>\r\n                                <Row key={\"events-container\"+index} className=\"event-items\" style={styles.container}>\r\n                                    <Col onClick={ () => selectedEventHandler(name)} style={styles.eventSelection}>\r\n                                        <Row>\r\n                                        <Col sm={5} style={styles.heading}>{name} </Col>\r\n                                        <Col sm={7} style={styles.record}>Date & Time: {date} 10 pm</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                        <Col sm={5} style={styles.record}>Organizier: {host} </Col>\r\n                                        <Col sm={7} style={styles.record}>Details: {details} </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr className=\"divider\"/>\r\n                            </div>\r\n                    })\r\n                    }\r\n                </Container>\r\n            </div>\r\n            </>\r\n}\r\nexport default OrganizingEvents;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\API\\userAPIs.js",["345"],"import axios from 'axios';\r\nimport CheckTokenExpiry, {Base_URL} from './Config';\r\n\r\n\r\nexport function UserDashboardData (){\r\n\r\n    return CheckTokenExpiry()\r\n    .then(res => {\r\n\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        var token = \"\";\r\n        if(user)\r\n            token = user.token;\r\n        const AuthorizationHeader = { \"Authorization\": \"Bearer \" + token }\r\n        \r\n        return axios.get(Base_URL + '/dashboards/user', { headers:AuthorizationHeader })\r\n    \r\n    }).catch(err => {\r\n        return new Promise((resolve, reject) => {\r\n            reject(new Error(err));\r\n        })\r\n    } );\r\n}\r\n\r\nexport function UpcomingEventsData(){\r\n    // const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    // var token = \"\";\r\n    // if(user)\r\n    //     token = user.token;\r\n    // const AuthorizationHeader = { \"Authorization\": \"Bearer \" + token }\r\n\r\n    \r\n    return axios.get(Base_URL + '/events/user');\r\n}\r\n\r\nexport function OrganizingEventsData(){\r\n    // const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    // var token = \"\";\r\n    // if(user)\r\n    //     token = user.token;\r\n    // const AuthorizationHeader = { \"Authorization\": \"Bearer \" + token }\r\n    \r\n    return CheckTokenExpiry()\r\n    .then(res => {\r\n\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        var token = \"\"\r\n        if(user)\r\n            token = user.token;\r\n        const AuthorizationHeader = { \"Authorization\": \"Bearer \" + token }\r\n\r\n        return axios.get(Base_URL + '/events/user/organizing', { headers:AuthorizationHeader })\r\n\r\n\r\n    }).catch(err => {\r\n        return new Promise((resolve, reject) => {\r\n            reject(new Error(err));\r\n        })\r\n    } );\r\n}\r\n\r\n\r\nexport function EventDetailsByID (ID){\r\n\r\n    return CheckTokenExpiry()\r\n    .then(res => {\r\n\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        var token = \"\";\r\n        if(user)\r\n            token = user.token;\r\n        const AuthorizationHeader = { \"Authorization\": \"Bearer \" + token }\r\n        \r\n        return axios.get(Base_URL + '/events/user/' + ID, { headers:AuthorizationHeader })\r\n  \r\n    }).catch(err => {\r\n        return new Promise((resolve, reject) => {\r\n            reject(new Error(err));\r\n        })\r\n    } );\r\n}\r\n\r\n// API for requesting stall\r\nexport function RequestForStall(){\r\n\r\n    \r\n}\r\n\r\nexport function EventOptions(ID){\r\n    return CheckTokenExpiry()\r\n    .then(res => {\r\n\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        var token = \"\";\r\n        if(user)\r\n            token = user.token;\r\n        const AuthorizationHeader = { \"Authorization\": \"Bearer \" + token }\r\n        \r\n        return axios.get(Base_URL + '/events/user/options/' + ID, { headers:AuthorizationHeader })\r\n  \r\n    }).catch(err => {\r\n        return new Promise((resolve, reject) => {\r\n            reject(new Error(err));\r\n        })\r\n    } );\r\n\r\n}\r\n\r\nexport default null;\r\n","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\Invoice.js",["346","347","348","349","350","351","352","353","354","355"],"import React, { useState } from 'react';\r\nimport {Form, Container, Row, Button, Col, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {DatePickerInput } from 'rc-datepicker';\r\n// CSS import goes here\r\nimport 'rc-datepicker/lib/style.css';\r\nimport './../assets/css/BaseComponents.css';\r\nimport './../assets/css/EventManagement.css';\r\n\r\nimport { useModalContext } from './MyContext';\r\n\r\n//custome Hooks\r\nfunction Invoice(){\r\n\r\n    var today = new Date();\r\n    var date = String(today.getFullYear() + \"-\" + (today.getMonth()+1) + \"-\" + today.getDate());\r\n\r\n    var [selectedStartDate, setSelectedStartDate] = useState(date);\r\n    var [selectedEndDate, setSelectedEndDate] = useState(date);\r\n\r\n    const { register, errors, watch, handleSubmit } = useForm();\r\n    \r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n\r\n    const onSubmit = data => {\r\n        console.log(\"Event Added\");\r\n        toggleModelOpen(false);\r\n    }\r\n\r\n    const styles = [\r\n        {\r\n            width:\"100%\",\r\n        }\r\n    ]\r\n\r\n    const selectStartDateHandler = (date) => {\r\n        console.log(date)\r\n        setSelectedStartDate(date);\r\n    }\r\n\r\n    const selectEndDateHandler = (date) => {\r\n        console.log(date)\r\n        setSelectedEndDate(date);\r\n    }\r\n\r\n    return  <>\r\n                <Container>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Group as={Row} controlId=\"formBasicEvent Name\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"name\" type=\"text\" placeholder=\"Event Name\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventHost\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"eventHost\" type=\"text\" placeholder=\"Event Host\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventStartDate\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                            <DatePickerInput className=\"col-12 date-picker\"\r\n                                             onChange={selectStartDateHandler}\r\n                                             className='my-custom-datepicker-component'\r\n                                             placeholder=\"Start Date\"\r\n                                             />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventEndDate\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                            <DatePickerInput className=\"col-12 date-picker\"\r\n                                             onChange={selectEndDateHandler}\r\n                                             className='my-custom-datepicker-component'\r\n                                             placeholder=\"End Date\"\r\n                                             />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formBasicEventDescription\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control as=\"textarea\" rows={3} name=\"description\" type=\"text\" placeholder=\"Description\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Button size=\"lg\" variant=\"dark\" type=\"submit\" block>\r\n                                    Confirm\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n            </>\r\n}\r\nexport default Invoice;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\EventDetails.js",["356","357","358","359","360","361","362","363","364","365","366","367","368","369"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Form, Container, Row, Button, Col, DropdownButton, Dropdown } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {DatePickerInput } from 'rc-datepicker';\r\n\r\n// CSS import goes here\r\nimport 'rc-datepicker/lib/style.css';\r\nimport './../assets/css/BaseComponents.css';\r\nimport './../assets/css/EventManagement.css';\r\n\r\nimport { useModalContext,  useHeaderContext, useUserContext } from './MyContext';\r\n\r\n// APIs\r\nimport { EventDetailsByID } from './API/userAPIs';\r\nimport { RefreshToken } from './API/Auth';\r\n\r\n//custome Hooks\r\nfunction EventDetails(props){\r\n\r\n    const ID = props.id;\r\n\r\n    var today = new Date();\r\n    var date = String(today.getFullYear() + \"-\" + (today.getMonth()+1) + \"-\" + today.getDate());\r\n\r\n    var [selectedStartDate, setSelectedStartDate] = useState(date);\r\n    var [selectedEndDate, setSelectedEndDate] = useState(date);\r\n\r\n    const { register, errors, watch, handleSubmit } = useForm();\r\n    \r\n    const history = useHistory();\r\n\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [isBaseHeader, toggleHeader] = useHeaderContext();\r\n    const [user, setUser] = useUserContext();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [requestFormDisplay, setRequestFormDisplay] = useState(\"none\");\r\n    const styles = {\r\n        request:{\r\n            display:requestFormDisplay\r\n        },\r\n        btn:{\r\n            display: (requestFormDisplay === \"none\") ? \"block\" : \"none\",\r\n            width:\"100%\"\r\n        }\r\n    }\r\n    \r\n    const onSubmit = data => {\r\n        console.log(\"Event Added\");\r\n        toggleModelOpen(false);\r\n    }\r\n\r\n    const selectStartDateHandler = (date) => {\r\n        console.log(date)\r\n        setSelectedStartDate(date);\r\n    }\r\n\r\n    const selectEndDateHandler = (date) => {\r\n        console.log(date)\r\n        setSelectedEndDate(date);\r\n    }\r\n\r\n    useEffect(() => {\r\n        EventDetailsByID(ID)\r\n        .then(res => {\r\n            setName(res.data.name);\r\n        }).catch(err => {\r\n            console.log(err)\r\n            if(err.message === \"INVALID\"){\r\n                toast(\"Please login to access events\", {\r\n                    type:\"info\",\r\n                    });\r\n            }else if(err.message === \"EXPIRED\"){\r\n                toast(\"You must login first\", {\r\n                    type:\"info\",\r\n                    });\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    toggleModelOpen(false);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n            }else if(err.message === \"REFRESH\"){\r\n                RefreshToken()\r\n                .then(res => {\r\n                    if(res.data.success){\r\n                        console.log(\"Token Refreshed\")\r\n                        var d = new Date();\r\n                        d.setSeconds(d.getSeconds() + res.data.user.tokenExpiry);\r\n                        res.data.user.tokenExpiry = d;\r\n                        setUser(res.data.user);\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    localStorage.clear();\r\n                    toggleHeader(true);\r\n                    toggleModelOpen(false);\r\n                    window.location.reload();\r\n                    history.push(\"/\");\r\n                })\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return  <>\r\n            <ToastContainer \r\n                position=\"top-left\"\r\n                autoClose={2000}\r\n                hideProgressBar={true}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n               />\r\n\r\n                <Container>\r\n                    <Form>\r\n                        <Form.Group as={Row} controlId=\"formBasicEvent Name\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control disabled={true} name=\"name\" type=\"text\" placeholder=\"Event Name\" value = {name} ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventHost\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"eventHost\" type=\"text\" placeholder=\"Event Host\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventStartDate\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                            <DatePickerInput className=\"col-12 date-picker\"\r\n                                             onChange={selectStartDateHandler}\r\n                                             className='my-custom-datepicker-component'\r\n                                             placeholder=\"Start Date\"\r\n                                             />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventEndDate\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                            <DatePickerInput className=\"col-12 date-picker\"\r\n                                             onChange={selectEndDateHandler}\r\n                                             className='my-custom-datepicker-component'\r\n                                             placeholder=\"End Date\"\r\n                                             />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Button size=\"lg\" variant=\"dark\" onClick={() => setRequestFormDisplay(\"block\")} style={styles.btn} >\r\n                                    Request for Stall\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n\r\n                <Container style={styles.request}>\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Group as={Row} controlId=\"formBasicEvent Name\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control disabled={true} name=\"name\" type=\"text\" placeholder=\"Event Name\" value = {name} ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventHost\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control name=\"eventHost\" type=\"text\" placeholder=\"Event Host\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventStartDate\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                            <DatePickerInput className=\"col-12 date-picker\"\r\n                                             onChange={selectStartDateHandler}\r\n                                             className='my-custom-datepicker-component'\r\n                                             placeholder=\"Start Date\"\r\n                                             />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group as={Row} controlId=\"formBasicEventEndDate\">\r\n                            <Col sm={{span:8, offset:2}}>\r\n                            <DatePickerInput className=\"col-12 date-picker\"\r\n                                             onChange={selectEndDateHandler}\r\n                                             className='my-custom-datepicker-component'\r\n                                             placeholder=\"End Date\"\r\n                                             />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId=\"formBasicEventDescription\">\r\n                            {/* <Form.Label>Password</Form.Label> */}\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Form.Control as=\"textarea\" rows={3} name=\"description\" type=\"text\" placeholder=\"Description\" ref={register} />\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Col sm={{span:8, offset:2}}>\r\n                                <Button size=\"lg\" variant=\"dark\" type=\"submit\" block>\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Container>\r\n\r\n            </>\r\n}\r\nexport default EventDetails;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\reducers\\userReducer.js",["370"],"export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n    if(action.type == \"ATTEND-EVENT\"){\r\n        return action.params;\r\n    }\r\n    return state;\r\n}","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\FloatActionButton.js",["371"]," import React, { useEffect } from 'react'\r\n import { useHistory } from 'react-router-dom';\r\nimport { Container, Button, Link, lightColors, darkColors } from 'react-floating-action-button';\r\n\r\n function FloatActionButton() {\r\n     const history = useHistory();\r\n\r\n    \r\n     const lobbyPath = () => {\r\n        var arr = history.location.pathname.split(\"/\");\r\n        var path = \"\";\r\n        for(let i of arr){\r\n            let ID = parseInt(i)\r\n            if(!Number.isNaN(ID))\r\n                path = \"/main-lobby/\" +  ID;\r\n            }\r\n         return path\r\n     }\r\n\r\n    return (\r\n        <Container>\r\n            {/* <Link href=\"#\"\r\n                tooltip=\"Back\"\r\n                icon=\"far fa-sticky-note\" /> */}\r\n            <Link href= {lobbyPath()}\r\n                tooltip=\"Main Lobby\"\r\n                icon=\"fas fa-user-plus\"\r\n                styles={{backgroundColor: darkColors.grey, color: lightColors.white}}\r\n                 >\r\n                <i className=\"material-icons\">account_balance</i>\r\n                </Link>\r\n            <Button\r\n                tooltip=\"Back\"\r\n                rotate={true}\r\n                onClick={() => history.goBack()}\r\n                styles={{backgroundColor: darkColors.grey, color: lightColors.white}}\r\n                >\r\n                   <i className=\"material-icons\">arrow_back</i>\r\n                </Button>\r\n        </Container>\r\n    )\r\n}\r\nexport default FloatActionButton;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\addVideos.js",["372","373","374","375","376"],"D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\AddVideos.js",["377"],"import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DynamicModal from './DynamicModal';\r\n\r\nimport { useModalContext } from \"./MyContext\";\r\n\r\nimport AddVideoForm from \"./AddVideoForm\";\r\n\r\nconst videos = [\r\n    {\r\n        catwalk:\"https://www.youtube.com/embed/I5HzV76t01c\",\r\n        title:\"VEMINA CITY CATWALK CPM Moscow Fall 2016 2017 by Fashion Channel\",\r\n        description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\"\r\n    },\r\n    {\r\n        catwalk:\"https://www.youtube.com/embed/7ccefq8s7eU\",\r\n        title:\"Evolving Trends in Runway Fashion - 2017 to 2018 Spring-Summer Seasons\",\r\n        description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\"\r\n    },\r\n    {\r\n        catwalk:\"https://www.youtube.com/embed/-PtDp5C6QB4\",\r\n        title:\"Evolving Trends in Runway Fashion - 2018 to 2019 Spring-Summer Seasons\",\r\n        description:\"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\"\r\n    }\r\n]\r\n\r\n\r\nconst styles = {\r\n    container:{\r\n        textAlign:\"left\",\r\n        padding:\"0px 50px\"\r\n    }\r\n}\r\n\r\nfunction AddVideos() {\r\n\r\n    const [modalOpen, toggleModelOpen] = useModalContext();\r\n    const [content, setContent] = useState();\r\n    const history = useHistory()\r\n\r\n    const addVideoHandler = () => {\r\n            let cont = {\r\n                header:\"ADD VIDEOS\",\r\n                component:<AddVideoForm />,\r\n                footer:\"\"\r\n            }\r\n            setContent(cont);\r\n            toggleModelOpen(true);\r\n    }\r\n    \r\n    const viewVideoHandler = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    \r\n\r\n    return  <>\r\n            {    modalOpen ? <DynamicModal content={content} /> : <></> }\r\n            <div className=\"dashboard\">\r\n                <Container style={styles.container}>\r\n                    <Row>\r\n                        <Col>\r\n                            <Button className=\"mb-5 float-right\" variant=\"secondary\" onClick={ viewVideoHandler }>View</Button>\r\n                            <Button className=\"mb-5 float-right\" split variant=\"secondary\" onClick={ addVideoHandler }>ADD Video</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                    videos.map( ({ catwalk, title, description}, index) => (\r\n                    <Row key={index} className=\"mb-5\">\r\n                        <Col className=\"event-items\">\r\n                            <Row><Col>\r\n                            <h3>{title}</h3>\r\n                            <p>{description}</p>\r\n                            </Col></Row>\r\n                            <Row>\r\n                            <Col sm={8} >\r\n                                <p>Link: <a href={catwalk} >{catwalk}</a></p>\r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <Button className=\"mt-2 float-right\" variant=\"secondary\" onClick={ addVideoHandler }>Remove</Button>\r\n                            </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    ))\r\n                    }\r\n                </Container>\r\n            </div>\r\n            </>\r\n}\r\nexport default AddVideos;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\AddVideoForm.js",["378","379"],"import React from \"react\";\r\nimport { Container, Form,Row, Col, Button } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nfunction AddVideoForm() {\r\n\r\n    const { register, errors, watch, handleSubmit } = useForm();\r\n    const onSubmit = data => {\r\n        console.log(data);\r\n    }\r\n    return  <>\r\n            <Container>\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Group as={Row} controlId=\"formBasicTitle\">\r\n                        <Col sm={{span:8, offset:2}}>\r\n                            <Form.Control name=\"title\" type=\"text\" placeholder=\"Video title\" ref={register} required/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formBasicDetails\">\r\n                        <Col sm={{span:8, offset:2}}>\r\n                            <Form.Control name=\"details\" type=\"text\" placeholder=\"Add details here\" ref={register} required/>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Row} controlId=\"formBasicLink\">\r\n                        <Col sm={{span:8, offset:2}}>\r\n                            <Form.Control name=\"link\" type=\"text\" placeholder=\"Paste link here\" ref={register} required/>\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Row>\r\n                        <Col sm={{span:8, offset:2}}>\r\n                            <Button size=\"lg\" variant=\"secondary\" type=\"submit\" block>\r\n                                ADD\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Form>\r\n            </Container>\r\n\r\n            </>\r\n}\r\nexport default AddVideoForm;","D:\\MyData\\Study\\Self Learning\\React\\reactApp\\event_management\\src\\components\\BasicStructure\\Terms.js",[],{"ruleId":"380","replacedBy":"381"},{"ruleId":"382","replacedBy":"383"},{"ruleId":"384","severity":1,"message":"385","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":20},{"ruleId":"384","severity":1,"message":"388","line":8,"column":8,"nodeType":"386","messageId":"387","endLine":8,"endColumn":23},{"ruleId":"384","severity":1,"message":"389","line":25,"column":8,"nodeType":"386","messageId":"387","endLine":25,"endColumn":20},{"ruleId":"384","severity":1,"message":"390","line":27,"column":8,"nodeType":"386","messageId":"387","endLine":27,"endColumn":15},{"ruleId":"384","severity":1,"message":"391","line":38,"column":18,"nodeType":"386","messageId":"387","endLine":38,"endColumn":25},{"ruleId":"392","severity":1,"message":"393","line":68,"column":7,"nodeType":"394","endLine":68,"endColumn":9,"suggestions":"395"},{"ruleId":"384","severity":1,"message":"396","line":17,"column":61,"nodeType":"386","messageId":"387","endLine":17,"endColumn":69},{"ruleId":"384","severity":1,"message":"397","line":17,"column":71,"nodeType":"386","messageId":"387","endLine":17,"endColumn":82},{"ruleId":"384","severity":1,"message":"398","line":18,"column":11,"nodeType":"386","messageId":"387","endLine":18,"endColumn":25},{"ruleId":"399","severity":1,"message":"400","line":212,"column":5,"nodeType":"401","messageId":"402","endLine":221,"endColumn":22},{"ruleId":"384","severity":1,"message":"403","line":1,"column":16,"nodeType":"386","messageId":"387","endLine":1,"endColumn":24},{"ruleId":"384","severity":1,"message":"404","line":17,"column":12,"nodeType":"386","messageId":"387","endLine":17,"endColumn":16},{"ruleId":"384","severity":1,"message":"405","line":18,"column":12,"nodeType":"386","messageId":"387","endLine":18,"endColumn":21},{"ruleId":"384","severity":1,"message":"406","line":19,"column":12,"nodeType":"386","messageId":"387","endLine":19,"endColumn":24},{"ruleId":"384","severity":1,"message":"407","line":25,"column":23,"nodeType":"386","messageId":"387","endLine":25,"endColumn":29},{"ruleId":"384","severity":1,"message":"408","line":25,"column":31,"nodeType":"386","messageId":"387","endLine":25,"endColumn":36},{"ruleId":"384","severity":1,"message":"405","line":36,"column":12,"nodeType":"386","messageId":"387","endLine":36,"endColumn":21},{"ruleId":"384","severity":1,"message":"404","line":37,"column":12,"nodeType":"386","messageId":"387","endLine":37,"endColumn":16},{"ruleId":"384","severity":1,"message":"406","line":38,"column":12,"nodeType":"386","messageId":"387","endLine":38,"endColumn":24},{"ruleId":"409","severity":1,"message":"410","line":67,"column":78,"nodeType":"411","messageId":"412","endLine":67,"endColumn":80},{"ruleId":"409","severity":1,"message":"410","line":68,"column":87,"nodeType":"411","messageId":"412","endLine":68,"endColumn":89},{"ruleId":"384","severity":1,"message":"413","line":2,"column":25,"nodeType":"386","messageId":"387","endLine":2,"endColumn":31},{"ruleId":"384","severity":1,"message":"414","line":2,"column":20,"nodeType":"386","messageId":"387","endLine":2,"endColumn":23},{"ruleId":"384","severity":1,"message":"404","line":17,"column":12,"nodeType":"386","messageId":"387","endLine":17,"endColumn":16},{"ruleId":"384","severity":1,"message":"391","line":17,"column":18,"nodeType":"386","messageId":"387","endLine":17,"endColumn":25},{"ruleId":"384","severity":1,"message":"415","line":4,"column":22,"nodeType":"386","messageId":"387","endLine":4,"endColumn":33},{"ruleId":"384","severity":1,"message":"416","line":9,"column":8,"nodeType":"386","messageId":"387","endLine":9,"endColumn":20},{"ruleId":"384","severity":1,"message":"417","line":12,"column":10,"nodeType":"386","messageId":"387","endLine":12,"endColumn":16},{"ruleId":"384","severity":1,"message":"418","line":23,"column":10,"nodeType":"386","messageId":"387","endLine":23,"endColumn":17},{"ruleId":"384","severity":1,"message":"419","line":23,"column":19,"nodeType":"386","messageId":"387","endLine":23,"endColumn":29},{"ruleId":"384","severity":1,"message":"406","line":24,"column":10,"nodeType":"386","messageId":"387","endLine":24,"endColumn":22},{"ruleId":"384","severity":1,"message":"391","line":25,"column":16,"nodeType":"386","messageId":"387","endLine":25,"endColumn":23},{"ruleId":"409","severity":1,"message":"410","line":50,"column":26,"nodeType":"411","messageId":"412","endLine":50,"endColumn":28},{"ruleId":"384","severity":1,"message":"404","line":28,"column":12,"nodeType":"386","messageId":"387","endLine":28,"endColumn":16},{"ruleId":"384","severity":1,"message":"391","line":28,"column":18,"nodeType":"386","messageId":"387","endLine":28,"endColumn":25},{"ruleId":"384","severity":1,"message":"420","line":29,"column":20,"nodeType":"386","messageId":"387","endLine":29,"endColumn":29},{"ruleId":"384","severity":1,"message":"421","line":53,"column":25,"nodeType":"386","messageId":"387","endLine":53,"endColumn":39},{"ruleId":"384","severity":1,"message":"422","line":54,"column":25,"nodeType":"386","messageId":"387","endLine":54,"endColumn":39},{"ruleId":"384","severity":1,"message":"423","line":55,"column":28,"nodeType":"386","messageId":"387","endLine":55,"endColumn":45},{"ruleId":"384","severity":1,"message":"424","line":56,"column":24,"nodeType":"386","messageId":"387","endLine":56,"endColumn":37},{"ruleId":"384","severity":1,"message":"425","line":57,"column":25,"nodeType":"386","messageId":"387","endLine":57,"endColumn":39},{"ruleId":"384","severity":1,"message":"426","line":53,"column":11,"nodeType":"386","messageId":"387","endLine":53,"endColumn":18},{"ruleId":"384","severity":1,"message":"427","line":57,"column":19,"nodeType":"386","messageId":"387","endLine":57,"endColumn":27},{"ruleId":"384","severity":1,"message":"403","line":1,"column":16,"nodeType":"386","messageId":"387","endLine":1,"endColumn":24},{"ruleId":"384","severity":1,"message":"428","line":2,"column":44,"nodeType":"386","messageId":"387","endLine":2,"endColumn":52},{"ruleId":"384","severity":1,"message":"429","line":2,"column":54,"nodeType":"386","messageId":"387","endLine":2,"endColumn":65},{"ruleId":"384","severity":1,"message":"430","line":2,"column":67,"nodeType":"386","messageId":"387","endLine":2,"endColumn":78},{"ruleId":"384","severity":1,"message":"426","line":15,"column":11,"nodeType":"386","messageId":"387","endLine":15,"endColumn":18},{"ruleId":"384","severity":1,"message":"407","line":17,"column":23,"nodeType":"386","messageId":"387","endLine":17,"endColumn":29},{"ruleId":"384","severity":1,"message":"408","line":17,"column":31,"nodeType":"386","messageId":"387","endLine":17,"endColumn":36},{"ruleId":"384","severity":1,"message":"405","line":19,"column":12,"nodeType":"386","messageId":"387","endLine":19,"endColumn":21},{"ruleId":"384","severity":1,"message":"431","line":27,"column":11,"nodeType":"386","messageId":"387","endLine":27,"endColumn":17},{"ruleId":"384","severity":1,"message":"432","line":1,"column":27,"nodeType":"386","messageId":"387","endLine":1,"endColumn":33},{"ruleId":"384","severity":1,"message":"433","line":2,"column":39,"nodeType":"386","messageId":"387","endLine":2,"endColumn":53},{"ruleId":"384","severity":1,"message":"428","line":2,"column":55,"nodeType":"386","messageId":"387","endLine":2,"endColumn":63},{"ruleId":"384","severity":1,"message":"406","line":60,"column":12,"nodeType":"386","messageId":"387","endLine":60,"endColumn":24},{"ruleId":"392","severity":1,"message":"434","line":159,"column":7,"nodeType":"394","endLine":159,"endColumn":9,"suggestions":"435"},{"ruleId":"399","severity":1,"message":"400","line":234,"column":1,"nodeType":"401","messageId":"402","endLine":260,"endColumn":4},{"ruleId":"384","severity":1,"message":"433","line":2,"column":44,"nodeType":"386","messageId":"387","endLine":2,"endColumn":58},{"ruleId":"384","severity":1,"message":"428","line":2,"column":60,"nodeType":"386","messageId":"387","endLine":2,"endColumn":68},{"ruleId":"384","severity":1,"message":"436","line":18,"column":10,"nodeType":"386","messageId":"387","endLine":18,"endColumn":27},{"ruleId":"384","severity":1,"message":"437","line":19,"column":10,"nodeType":"386","messageId":"387","endLine":19,"endColumn":25},{"ruleId":"384","severity":1,"message":"407","line":21,"column":23,"nodeType":"386","messageId":"387","endLine":21,"endColumn":29},{"ruleId":"384","severity":1,"message":"408","line":21,"column":31,"nodeType":"386","messageId":"387","endLine":21,"endColumn":36},{"ruleId":"384","severity":1,"message":"405","line":23,"column":12,"nodeType":"386","messageId":"387","endLine":23,"endColumn":21},{"ruleId":"384","severity":1,"message":"431","line":30,"column":11,"nodeType":"386","messageId":"387","endLine":30,"endColumn":17},{"ruleId":"438","severity":1,"message":"439","line":67,"column":46,"nodeType":"440","endLine":67,"endColumn":88},{"ruleId":"438","severity":1,"message":"439","line":78,"column":46,"nodeType":"440","endLine":78,"endColumn":88},{"ruleId":"384","severity":1,"message":"441","line":3,"column":31,"nodeType":"386","messageId":"387","endLine":3,"endColumn":36},{"ruleId":"384","severity":1,"message":"442","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":19},{"ruleId":"384","severity":1,"message":"443","line":8,"column":8,"nodeType":"386","messageId":"387","endLine":8,"endColumn":17},{"ruleId":"384","severity":1,"message":"444","line":19,"column":7,"nodeType":"386","messageId":"387","endLine":19,"endColumn":11},{"ruleId":"384","severity":1,"message":"445","line":48,"column":7,"nodeType":"386","messageId":"387","endLine":48,"endColumn":16},{"ruleId":"384","severity":1,"message":"405","line":61,"column":12,"nodeType":"386","messageId":"387","endLine":61,"endColumn":21},{"ruleId":"384","severity":1,"message":"446","line":61,"column":23,"nodeType":"386","messageId":"387","endLine":61,"endColumn":38},{"ruleId":"384","severity":1,"message":"406","line":62,"column":12,"nodeType":"386","messageId":"387","endLine":62,"endColumn":24},{"ruleId":"384","severity":1,"message":"404","line":63,"column":12,"nodeType":"386","messageId":"387","endLine":63,"endColumn":16},{"ruleId":"384","severity":1,"message":"447","line":69,"column":12,"nodeType":"386","messageId":"387","endLine":69,"endColumn":17},{"ruleId":"384","severity":1,"message":"448","line":69,"column":19,"nodeType":"386","messageId":"387","endLine":69,"endColumn":27},{"ruleId":"392","severity":1,"message":"449","line":133,"column":8,"nodeType":"394","endLine":133,"endColumn":10,"suggestions":"450"},{"ruleId":"399","severity":1,"message":"400","line":175,"column":21,"nodeType":"401","messageId":"402","endLine":197,"endColumn":37},{"ruleId":"399","severity":1,"message":"400","line":198,"column":21,"nodeType":"401","messageId":"402","endLine":198,"endColumn":89},{"ruleId":"384","severity":1,"message":"441","line":3,"column":20,"nodeType":"386","messageId":"387","endLine":3,"endColumn":25},{"ruleId":"384","severity":1,"message":"451","line":6,"column":10,"nodeType":"386","messageId":"387","endLine":6,"endColumn":24},{"ruleId":"384","severity":1,"message":"452","line":7,"column":8,"nodeType":"386","messageId":"387","endLine":7,"endColumn":17},{"ruleId":"384","severity":1,"message":"405","line":60,"column":12,"nodeType":"386","messageId":"387","endLine":60,"endColumn":21},{"ruleId":"384","severity":1,"message":"446","line":60,"column":23,"nodeType":"386","messageId":"387","endLine":60,"endColumn":38},{"ruleId":"384","severity":1,"message":"406","line":61,"column":12,"nodeType":"386","messageId":"387","endLine":61,"endColumn":24},{"ruleId":"384","severity":1,"message":"404","line":62,"column":12,"nodeType":"386","messageId":"387","endLine":62,"endColumn":16},{"ruleId":"392","severity":1,"message":"434","line":131,"column":8,"nodeType":"394","endLine":131,"endColumn":10,"suggestions":"453"},{"ruleId":"454","severity":1,"message":"455","line":156,"column":49,"nodeType":"456","endLine":160,"endColumn":50},{"ruleId":"454","severity":1,"message":"455","line":195,"column":37,"nodeType":"456","endLine":199,"endColumn":57},{"ruleId":"384","severity":1,"message":"451","line":12,"column":10,"nodeType":"386","messageId":"387","endLine":12,"endColumn":24},{"ruleId":"384","severity":1,"message":"452","line":13,"column":8,"nodeType":"386","messageId":"387","endLine":13,"endColumn":17},{"ruleId":"384","severity":1,"message":"404","line":74,"column":12,"nodeType":"386","messageId":"387","endLine":74,"endColumn":16},{"ruleId":"384","severity":1,"message":"457","line":76,"column":12,"nodeType":"386","messageId":"387","endLine":76,"endColumn":18},{"ruleId":"392","severity":1,"message":"434","line":149,"column":8,"nodeType":"394","endLine":149,"endColumn":10,"suggestions":"458"},{"ruleId":"384","severity":1,"message":"433","line":3,"column":44,"nodeType":"386","messageId":"387","endLine":3,"endColumn":58},{"ruleId":"384","severity":1,"message":"428","line":3,"column":60,"nodeType":"386","messageId":"387","endLine":3,"endColumn":68},{"ruleId":"384","severity":1,"message":"407","line":14,"column":23,"nodeType":"386","messageId":"387","endLine":14,"endColumn":29},{"ruleId":"384","severity":1,"message":"408","line":14,"column":31,"nodeType":"386","messageId":"387","endLine":14,"endColumn":36},{"ruleId":"384","severity":1,"message":"405","line":16,"column":12,"nodeType":"386","messageId":"387","endLine":16,"endColumn":21},{"ruleId":"384","severity":1,"message":"431","line":23,"column":11,"nodeType":"386","messageId":"387","endLine":23,"endColumn":17},{"ruleId":"384","severity":1,"message":"459","line":5,"column":10,"nodeType":"386","messageId":"387","endLine":5,"endColumn":19},{"ruleId":"384","severity":1,"message":"407","line":7,"column":23,"nodeType":"386","messageId":"387","endLine":7,"endColumn":29},{"ruleId":"384","severity":1,"message":"408","line":7,"column":31,"nodeType":"386","messageId":"387","endLine":7,"endColumn":36},{"ruleId":"384","severity":1,"message":"404","line":7,"column":12,"nodeType":"386","messageId":"387","endLine":7,"endColumn":16},{"ruleId":"460","severity":2,"message":"461","line":9,"column":16,"nodeType":"386","messageId":"462","endLine":9,"endColumn":24},{"ruleId":"463","severity":1,"message":"464","line":15,"column":1,"nodeType":"465","endLine":17,"endColumn":2},{"ruleId":"463","severity":1,"message":"466","line":43,"column":1,"nodeType":"465","endLine":43,"endColumn":21},{"ruleId":"384","severity":1,"message":"405","line":44,"column":12,"nodeType":"386","messageId":"387","endLine":44,"endColumn":21},{"ruleId":"384","severity":1,"message":"446","line":44,"column":23,"nodeType":"386","messageId":"387","endLine":44,"endColumn":38},{"ruleId":"384","severity":1,"message":"406","line":45,"column":12,"nodeType":"386","messageId":"387","endLine":45,"endColumn":24},{"ruleId":"384","severity":1,"message":"447","line":48,"column":12,"nodeType":"386","messageId":"387","endLine":48,"endColumn":17},{"ruleId":"392","severity":1,"message":"467","line":127,"column":8,"nodeType":"394","endLine":127,"endColumn":10,"suggestions":"468"},{"ruleId":"384","severity":1,"message":"433","line":2,"column":39,"nodeType":"386","messageId":"387","endLine":2,"endColumn":53},{"ruleId":"384","severity":1,"message":"428","line":2,"column":55,"nodeType":"386","messageId":"387","endLine":2,"endColumn":63},{"ruleId":"384","severity":1,"message":"406","line":66,"column":12,"nodeType":"386","messageId":"387","endLine":66,"endColumn":24},{"ruleId":"384","severity":1,"message":"404","line":67,"column":12,"nodeType":"386","messageId":"387","endLine":67,"endColumn":16},{"ruleId":"392","severity":1,"message":"434","line":143,"column":7,"nodeType":"394","endLine":143,"endColumn":9,"suggestions":"469"},{"ruleId":"463","severity":1,"message":"466","line":109,"column":1,"nodeType":"465","endLine":109,"endColumn":21},{"ruleId":"384","severity":1,"message":"433","line":2,"column":44,"nodeType":"386","messageId":"387","endLine":2,"endColumn":58},{"ruleId":"384","severity":1,"message":"428","line":2,"column":60,"nodeType":"386","messageId":"387","endLine":2,"endColumn":68},{"ruleId":"384","severity":1,"message":"436","line":18,"column":10,"nodeType":"386","messageId":"387","endLine":18,"endColumn":27},{"ruleId":"384","severity":1,"message":"437","line":19,"column":10,"nodeType":"386","messageId":"387","endLine":19,"endColumn":25},{"ruleId":"384","severity":1,"message":"407","line":21,"column":23,"nodeType":"386","messageId":"387","endLine":21,"endColumn":29},{"ruleId":"384","severity":1,"message":"408","line":21,"column":31,"nodeType":"386","messageId":"387","endLine":21,"endColumn":36},{"ruleId":"384","severity":1,"message":"405","line":23,"column":12,"nodeType":"386","messageId":"387","endLine":23,"endColumn":21},{"ruleId":"384","severity":1,"message":"431","line":30,"column":11,"nodeType":"386","messageId":"387","endLine":30,"endColumn":17},{"ruleId":"438","severity":1,"message":"439","line":67,"column":46,"nodeType":"440","endLine":67,"endColumn":88},{"ruleId":"438","severity":1,"message":"439","line":78,"column":46,"nodeType":"440","endLine":78,"endColumn":88},{"ruleId":"384","severity":1,"message":"433","line":3,"column":44,"nodeType":"386","messageId":"387","endLine":3,"endColumn":58},{"ruleId":"384","severity":1,"message":"428","line":3,"column":60,"nodeType":"386","messageId":"387","endLine":3,"endColumn":68},{"ruleId":"384","severity":1,"message":"436","line":27,"column":10,"nodeType":"386","messageId":"387","endLine":27,"endColumn":27},{"ruleId":"384","severity":1,"message":"437","line":28,"column":10,"nodeType":"386","messageId":"387","endLine":28,"endColumn":25},{"ruleId":"384","severity":1,"message":"407","line":30,"column":23,"nodeType":"386","messageId":"387","endLine":30,"endColumn":29},{"ruleId":"384","severity":1,"message":"408","line":30,"column":31,"nodeType":"386","messageId":"387","endLine":30,"endColumn":36},{"ruleId":"384","severity":1,"message":"405","line":34,"column":12,"nodeType":"386","messageId":"387","endLine":34,"endColumn":21},{"ruleId":"384","severity":1,"message":"406","line":35,"column":12,"nodeType":"386","messageId":"387","endLine":35,"endColumn":24},{"ruleId":"384","severity":1,"message":"404","line":36,"column":12,"nodeType":"386","messageId":"387","endLine":36,"endColumn":16},{"ruleId":"392","severity":1,"message":"470","line":104,"column":8,"nodeType":"394","endLine":104,"endColumn":10,"suggestions":"471"},{"ruleId":"438","severity":1,"message":"439","line":139,"column":46,"nodeType":"440","endLine":139,"endColumn":88},{"ruleId":"438","severity":1,"message":"439","line":150,"column":46,"nodeType":"440","endLine":150,"endColumn":88},{"ruleId":"438","severity":1,"message":"439","line":186,"column":46,"nodeType":"440","endLine":186,"endColumn":88},{"ruleId":"438","severity":1,"message":"439","line":197,"column":46,"nodeType":"440","endLine":197,"endColumn":88},{"ruleId":"409","severity":1,"message":"410","line":4,"column":20,"nodeType":"411","messageId":"412","endLine":4,"endColumn":22},{"ruleId":"384","severity":1,"message":"472","line":1,"column":18,"nodeType":"386","messageId":"387","endLine":1,"endColumn":27},{"ruleId":"384","severity":1,"message":"472","line":1,"column":27,"nodeType":"386","messageId":"387","endLine":1,"endColumn":36},{"ruleId":"384","severity":1,"message":"473","line":3,"column":10,"nodeType":"386","messageId":"387","endLine":3,"endColumn":20},{"ruleId":"460","severity":2,"message":"474","line":35,"column":42,"nodeType":"386","messageId":"462","endLine":35,"endColumn":57},{"ruleId":"475","severity":2,"message":"476","line":41,"column":28,"nodeType":"477","endLine":41,"endColumn":40},{"ruleId":"460","severity":2,"message":"478","line":41,"column":47,"nodeType":"386","messageId":"462","endLine":41,"endColumn":49},{"ruleId":"384","severity":1,"message":"472","line":1,"column":27,"nodeType":"386","messageId":"387","endLine":1,"endColumn":36},{"ruleId":"384","severity":1,"message":"407","line":8,"column":23,"nodeType":"386","messageId":"387","endLine":8,"endColumn":29},{"ruleId":"384","severity":1,"message":"408","line":8,"column":31,"nodeType":"386","messageId":"387","endLine":8,"endColumn":36},"no-native-reassign",["479"],"no-negated-in-lhs",["480"],"no-unused-vars","'NavbarHeader' is defined but never used.","Identifier","unusedVar","'DashboardHeader' is defined but never used.","'NavbarFooter' is defined but never used.","'AddUser' is defined but never used.","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'toggleHeader', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["481"],"'setError' is assigned a value but never used.","'clearErrors' is assigned a value but never used.","'watchAllFields' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'user' is assigned a value but never used.","'modalOpen' is assigned a value but never used.","'isBaseHeader' is assigned a value but never used.","'errors' is assigned a value but never used.","'watch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Row' is defined but never used.","'NavDropdown' is defined but never used.","'DynamicModal' is defined but never used.","'Logout' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'setTotalEvents' is assigned a value but never used.","'setTodayEvents' is assigned a value but never used.","'setUpcomingEvents' is assigned a value but never used.","'setTotalUsers' is assigned a value but never used.","'setTotalAdmins' is assigned a value but never used.","'history' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'Dropdown' is defined but never used.","'ButtonGroup' is defined but never used.","'SplitButton' is defined but never used.","'styles' is assigned a value but never used.","'useRef' is defined but never used.","'DropdownButton' is defined but never used.","React Hook useEffect has missing dependencies: 'history', 'setUser', and 'toggleHeader'. Either include them or remove the dependency array.",["482"],"'selectedStartDate' is assigned a value but never used.","'selectedEndDate' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Image' is defined but never used.","'ImageMapper' is defined but never used.","'IMAGE_URL' is defined but never used.","'imgs' is assigned a value but never used.","'AREAS_MAP' is assigned a value but never used.","'toggleModelOpen' is assigned a value but never used.","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ID', 'history', 'setUser', and 'toggleHeader'. Either include them or remove the dependency array.",["483"],"'ToastContainer' is defined but never used.","'MyContext' is defined but never used.",["484"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'header' is assigned a value but never used.",["485"],"'Container' is defined but never used.","no-undef","'Base_URL' is not defined.","undef","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign literal to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'history', 'setUser', 'toggleHeader', and 'user'. Either include them or remove the dependency array.",["486"],["487"],"React Hook useEffect has missing dependencies: 'ID', 'history', 'setUser', 'toggleHeader', and 'toggleModelOpen'. Either include them or remove the dependency array.",["488"],"'useEffect' is defined but never used.","'useHistory' is defined but never used.","'useModalContext' is not defined.","react/jsx-no-undef","'EventDetails' is not defined.","JSXIdentifier","'id' is not defined.","no-global-assign","no-unsafe-negation",{"desc":"489","fix":"490"},{"desc":"491","fix":"492"},{"desc":"493","fix":"494"},{"desc":"491","fix":"495"},{"desc":"491","fix":"496"},{"desc":"497","fix":"498"},{"desc":"491","fix":"499"},{"desc":"500","fix":"501"},"Update the dependencies array to be: [history, toggleHeader, user]",{"range":"502","text":"503"},"Update the dependencies array to be: [history, setUser, toggleHeader]",{"range":"504","text":"505"},"Update the dependencies array to be: [ID, history, setUser, toggleHeader]",{"range":"506","text":"507"},{"range":"508","text":"505"},{"range":"509","text":"505"},"Update the dependencies array to be: [history, setUser, toggleHeader, user]",{"range":"510","text":"511"},{"range":"512","text":"505"},"Update the dependencies array to be: [ID, history, setUser, toggleHeader, toggleModelOpen]",{"range":"513","text":"514"},[2417,2419],"[history, toggleHeader, user]",[4389,4391],"[history, setUser, toggleHeader]",[4876,4878],"[ID, history, setUser, toggleHeader]",[5829,5831],[3950,3952],[4364,4366],"[history, setUser, toggleHeader, user]",[4198,4200],[3541,3543],"[ID, history, setUser, toggleHeader, toggleModelOpen]"]